// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.organizations.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class IamPolicyState extends com.pulumi.resources.ResourceArgs {

    public static final IamPolicyState Empty = new IamPolicyState();

    /**
     * (Computed) The etag of the organization&#39;s IAM policy.
     * 
     */
    @Import(name="etag")
    private @Nullable Output<String> etag;

    /**
     * @return (Computed) The etag of the organization&#39;s IAM policy.
     * 
     */
    public Optional<Output<String>> etag() {
        return Optional.ofNullable(this.etag);
    }

    /**
     * The organization id of the target organization.
     * 
     */
    @Import(name="orgId")
    private @Nullable Output<String> orgId;

    /**
     * @return The organization id of the target organization.
     * 
     */
    public Optional<Output<String>> orgId() {
        return Optional.ofNullable(this.orgId);
    }

    /**
     * The `gcp.organizations.getIamPolicy` data source that represents
     * the IAM policy that will be applied to the organization. The policy will be
     * merged with any existing policy applied to the organization.
     * 
     * Changing this updates the policy.
     * 
     * Deleting this removes all policies from the organization, locking out users without
     * organization-level access.
     * 
     */
    @Import(name="policyData")
    private @Nullable Output<String> policyData;

    /**
     * @return The `gcp.organizations.getIamPolicy` data source that represents
     * the IAM policy that will be applied to the organization. The policy will be
     * merged with any existing policy applied to the organization.
     * 
     * Changing this updates the policy.
     * 
     * Deleting this removes all policies from the organization, locking out users without
     * organization-level access.
     * 
     */
    public Optional<Output<String>> policyData() {
        return Optional.ofNullable(this.policyData);
    }

    private IamPolicyState() {}

    private IamPolicyState(IamPolicyState $) {
        this.etag = $.etag;
        this.orgId = $.orgId;
        this.policyData = $.policyData;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(IamPolicyState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private IamPolicyState $;

        public Builder() {
            $ = new IamPolicyState();
        }

        public Builder(IamPolicyState defaults) {
            $ = new IamPolicyState(Objects.requireNonNull(defaults));
        }

        /**
         * @param etag (Computed) The etag of the organization&#39;s IAM policy.
         * 
         * @return builder
         * 
         */
        public Builder etag(@Nullable Output<String> etag) {
            $.etag = etag;
            return this;
        }

        /**
         * @param etag (Computed) The etag of the organization&#39;s IAM policy.
         * 
         * @return builder
         * 
         */
        public Builder etag(String etag) {
            return etag(Output.of(etag));
        }

        /**
         * @param orgId The organization id of the target organization.
         * 
         * @return builder
         * 
         */
        public Builder orgId(@Nullable Output<String> orgId) {
            $.orgId = orgId;
            return this;
        }

        /**
         * @param orgId The organization id of the target organization.
         * 
         * @return builder
         * 
         */
        public Builder orgId(String orgId) {
            return orgId(Output.of(orgId));
        }

        /**
         * @param policyData The `gcp.organizations.getIamPolicy` data source that represents
         * the IAM policy that will be applied to the organization. The policy will be
         * merged with any existing policy applied to the organization.
         * 
         * Changing this updates the policy.
         * 
         * Deleting this removes all policies from the organization, locking out users without
         * organization-level access.
         * 
         * @return builder
         * 
         */
        public Builder policyData(@Nullable Output<String> policyData) {
            $.policyData = policyData;
            return this;
        }

        /**
         * @param policyData The `gcp.organizations.getIamPolicy` data source that represents
         * the IAM policy that will be applied to the organization. The policy will be
         * merged with any existing policy applied to the organization.
         * 
         * Changing this updates the policy.
         * 
         * Deleting this removes all policies from the organization, locking out users without
         * organization-level access.
         * 
         * @return builder
         * 
         */
        public Builder policyData(String policyData) {
            return policyData(Output.of(policyData));
        }

        public IamPolicyState build() {
            return $;
        }
    }

}
