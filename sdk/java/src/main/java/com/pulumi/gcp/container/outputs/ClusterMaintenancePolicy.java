// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.container.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.gcp.container.outputs.ClusterMaintenancePolicyDailyMaintenanceWindow;
import com.pulumi.gcp.container.outputs.ClusterMaintenancePolicyMaintenanceExclusion;
import com.pulumi.gcp.container.outputs.ClusterMaintenancePolicyRecurringWindow;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ClusterMaintenancePolicy {
    /**
     * @return structure documented below.
     * 
     */
    private @Nullable ClusterMaintenancePolicyDailyMaintenanceWindow dailyMaintenanceWindow;
    /**
     * @return structure documented below
     * 
     * In beta, one or the other of `recurring_window` and `daily_maintenance_window` is required if a `maintenance_policy` block is supplied.
     * 
     */
    private @Nullable List<ClusterMaintenancePolicyMaintenanceExclusion> maintenanceExclusions;
    /**
     * @return structure documented below
     * 
     */
    private @Nullable ClusterMaintenancePolicyRecurringWindow recurringWindow;

    private ClusterMaintenancePolicy() {}
    /**
     * @return structure documented below.
     * 
     */
    public Optional<ClusterMaintenancePolicyDailyMaintenanceWindow> dailyMaintenanceWindow() {
        return Optional.ofNullable(this.dailyMaintenanceWindow);
    }
    /**
     * @return structure documented below
     * 
     * In beta, one or the other of `recurring_window` and `daily_maintenance_window` is required if a `maintenance_policy` block is supplied.
     * 
     */
    public List<ClusterMaintenancePolicyMaintenanceExclusion> maintenanceExclusions() {
        return this.maintenanceExclusions == null ? List.of() : this.maintenanceExclusions;
    }
    /**
     * @return structure documented below
     * 
     */
    public Optional<ClusterMaintenancePolicyRecurringWindow> recurringWindow() {
        return Optional.ofNullable(this.recurringWindow);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ClusterMaintenancePolicy defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable ClusterMaintenancePolicyDailyMaintenanceWindow dailyMaintenanceWindow;
        private @Nullable List<ClusterMaintenancePolicyMaintenanceExclusion> maintenanceExclusions;
        private @Nullable ClusterMaintenancePolicyRecurringWindow recurringWindow;
        public Builder() {}
        public Builder(ClusterMaintenancePolicy defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dailyMaintenanceWindow = defaults.dailyMaintenanceWindow;
    	      this.maintenanceExclusions = defaults.maintenanceExclusions;
    	      this.recurringWindow = defaults.recurringWindow;
        }

        @CustomType.Setter
        public Builder dailyMaintenanceWindow(@Nullable ClusterMaintenancePolicyDailyMaintenanceWindow dailyMaintenanceWindow) {
            this.dailyMaintenanceWindow = dailyMaintenanceWindow;
            return this;
        }
        @CustomType.Setter
        public Builder maintenanceExclusions(@Nullable List<ClusterMaintenancePolicyMaintenanceExclusion> maintenanceExclusions) {
            this.maintenanceExclusions = maintenanceExclusions;
            return this;
        }
        public Builder maintenanceExclusions(ClusterMaintenancePolicyMaintenanceExclusion... maintenanceExclusions) {
            return maintenanceExclusions(List.of(maintenanceExclusions));
        }
        @CustomType.Setter
        public Builder recurringWindow(@Nullable ClusterMaintenancePolicyRecurringWindow recurringWindow) {
            this.recurringWindow = recurringWindow;
            return this;
        }
        public ClusterMaintenancePolicy build() {
            final var o = new ClusterMaintenancePolicy();
            o.dailyMaintenanceWindow = dailyMaintenanceWindow;
            o.maintenanceExclusions = maintenanceExclusions;
            o.recurringWindow = recurringWindow;
            return o;
        }
    }
}
