// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.organizations.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.organizations.inputs.GetIamPolicyAuditConfig;
import com.pulumi.gcp.organizations.inputs.GetIamPolicyBinding;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetIamPolicyPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetIamPolicyPlainArgs Empty = new GetIamPolicyPlainArgs();

    /**
     * A nested configuration block that defines logging additional configuration for your project. This field is only supported on `gcp.projects.IamPolicy`, `gcp.folder.IamPolicy` and `gcp.organizations.IamPolicy`.
     * 
     */
    @Import(name="auditConfigs")
    private @Nullable List<GetIamPolicyAuditConfig> auditConfigs;

    /**
     * @return A nested configuration block that defines logging additional configuration for your project. This field is only supported on `gcp.projects.IamPolicy`, `gcp.folder.IamPolicy` and `gcp.organizations.IamPolicy`.
     * 
     */
    public Optional<List<GetIamPolicyAuditConfig>> auditConfigs() {
        return Optional.ofNullable(this.auditConfigs);
    }

    /**
     * A nested configuration block (described below)
     * defining a binding to be included in the policy document. Multiple
     * `binding` arguments are supported.
     * 
     * Each document configuration must have one or more `binding` blocks, which
     * each accept the following arguments:
     * 
     */
    @Import(name="bindings")
    private @Nullable List<GetIamPolicyBinding> bindings;

    /**
     * @return A nested configuration block (described below)
     * defining a binding to be included in the policy document. Multiple
     * `binding` arguments are supported.
     * 
     * Each document configuration must have one or more `binding` blocks, which
     * each accept the following arguments:
     * 
     */
    public Optional<List<GetIamPolicyBinding>> bindings() {
        return Optional.ofNullable(this.bindings);
    }

    private GetIamPolicyPlainArgs() {}

    private GetIamPolicyPlainArgs(GetIamPolicyPlainArgs $) {
        this.auditConfigs = $.auditConfigs;
        this.bindings = $.bindings;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetIamPolicyPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetIamPolicyPlainArgs $;

        public Builder() {
            $ = new GetIamPolicyPlainArgs();
        }

        public Builder(GetIamPolicyPlainArgs defaults) {
            $ = new GetIamPolicyPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param auditConfigs A nested configuration block that defines logging additional configuration for your project. This field is only supported on `gcp.projects.IamPolicy`, `gcp.folder.IamPolicy` and `gcp.organizations.IamPolicy`.
         * 
         * @return builder
         * 
         */
        public Builder auditConfigs(@Nullable List<GetIamPolicyAuditConfig> auditConfigs) {
            $.auditConfigs = auditConfigs;
            return this;
        }

        /**
         * @param auditConfigs A nested configuration block that defines logging additional configuration for your project. This field is only supported on `gcp.projects.IamPolicy`, `gcp.folder.IamPolicy` and `gcp.organizations.IamPolicy`.
         * 
         * @return builder
         * 
         */
        public Builder auditConfigs(GetIamPolicyAuditConfig... auditConfigs) {
            return auditConfigs(List.of(auditConfigs));
        }

        /**
         * @param bindings A nested configuration block (described below)
         * defining a binding to be included in the policy document. Multiple
         * `binding` arguments are supported.
         * 
         * Each document configuration must have one or more `binding` blocks, which
         * each accept the following arguments:
         * 
         * @return builder
         * 
         */
        public Builder bindings(@Nullable List<GetIamPolicyBinding> bindings) {
            $.bindings = bindings;
            return this;
        }

        /**
         * @param bindings A nested configuration block (described below)
         * defining a binding to be included in the policy document. Multiple
         * `binding` arguments are supported.
         * 
         * Each document configuration must have one or more `binding` blocks, which
         * each accept the following arguments:
         * 
         * @return builder
         * 
         */
        public Builder bindings(GetIamPolicyBinding... bindings) {
            return bindings(List.of(bindings));
        }

        public GetIamPolicyPlainArgs build() {
            return $;
        }
    }

}
