// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.dataplex.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.dataplex.inputs.DatascanDataProfileResultProfileArgs;
import com.pulumi.gcp.dataplex.inputs.DatascanDataProfileResultScannedDataArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DatascanDataProfileResultArgs extends com.pulumi.resources.ResourceArgs {

    public static final DatascanDataProfileResultArgs Empty = new DatascanDataProfileResultArgs();

    /**
     * Profile information for the corresponding field.
     * Structure is documented below.
     * 
     */
    @Import(name="profiles")
    private @Nullable Output<List<DatascanDataProfileResultProfileArgs>> profiles;

    /**
     * @return Profile information for the corresponding field.
     * Structure is documented below.
     * 
     */
    public Optional<Output<List<DatascanDataProfileResultProfileArgs>>> profiles() {
        return Optional.ofNullable(this.profiles);
    }

    /**
     * The count of rows scanned.
     * 
     */
    @Import(name="rowCount")
    private @Nullable Output<String> rowCount;

    /**
     * @return The count of rows scanned.
     * 
     */
    public Optional<Output<String>> rowCount() {
        return Optional.ofNullable(this.rowCount);
    }

    /**
     * (Output)
     * The data scanned for this result.
     * Structure is documented below.
     * 
     */
    @Import(name="scannedDatas")
    private @Nullable Output<List<DatascanDataProfileResultScannedDataArgs>> scannedDatas;

    /**
     * @return (Output)
     * The data scanned for this result.
     * Structure is documented below.
     * 
     */
    public Optional<Output<List<DatascanDataProfileResultScannedDataArgs>>> scannedDatas() {
        return Optional.ofNullable(this.scannedDatas);
    }

    private DatascanDataProfileResultArgs() {}

    private DatascanDataProfileResultArgs(DatascanDataProfileResultArgs $) {
        this.profiles = $.profiles;
        this.rowCount = $.rowCount;
        this.scannedDatas = $.scannedDatas;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DatascanDataProfileResultArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DatascanDataProfileResultArgs $;

        public Builder() {
            $ = new DatascanDataProfileResultArgs();
        }

        public Builder(DatascanDataProfileResultArgs defaults) {
            $ = new DatascanDataProfileResultArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param profiles Profile information for the corresponding field.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder profiles(@Nullable Output<List<DatascanDataProfileResultProfileArgs>> profiles) {
            $.profiles = profiles;
            return this;
        }

        /**
         * @param profiles Profile information for the corresponding field.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder profiles(List<DatascanDataProfileResultProfileArgs> profiles) {
            return profiles(Output.of(profiles));
        }

        /**
         * @param profiles Profile information for the corresponding field.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder profiles(DatascanDataProfileResultProfileArgs... profiles) {
            return profiles(List.of(profiles));
        }

        /**
         * @param rowCount The count of rows scanned.
         * 
         * @return builder
         * 
         */
        public Builder rowCount(@Nullable Output<String> rowCount) {
            $.rowCount = rowCount;
            return this;
        }

        /**
         * @param rowCount The count of rows scanned.
         * 
         * @return builder
         * 
         */
        public Builder rowCount(String rowCount) {
            return rowCount(Output.of(rowCount));
        }

        /**
         * @param scannedDatas (Output)
         * The data scanned for this result.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder scannedDatas(@Nullable Output<List<DatascanDataProfileResultScannedDataArgs>> scannedDatas) {
            $.scannedDatas = scannedDatas;
            return this;
        }

        /**
         * @param scannedDatas (Output)
         * The data scanned for this result.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder scannedDatas(List<DatascanDataProfileResultScannedDataArgs> scannedDatas) {
            return scannedDatas(Output.of(scannedDatas));
        }

        /**
         * @param scannedDatas (Output)
         * The data scanned for this result.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder scannedDatas(DatascanDataProfileResultScannedDataArgs... scannedDatas) {
            return scannedDatas(List.of(scannedDatas));
        }

        public DatascanDataProfileResultArgs build() {
            return $;
        }
    }

}
