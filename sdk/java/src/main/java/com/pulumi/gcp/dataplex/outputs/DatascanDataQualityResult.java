// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.dataplex.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.gcp.dataplex.outputs.DatascanDataQualityResultDimension;
import com.pulumi.gcp.dataplex.outputs.DatascanDataQualityResultRule;
import com.pulumi.gcp.dataplex.outputs.DatascanDataQualityResultScannedData;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DatascanDataQualityResult {
    /**
     * @return A list of results at the dimension level.
     * Structure is documented below.
     * 
     */
    private @Nullable List<DatascanDataQualityResultDimension> dimensions;
    /**
     * @return (Output)
     * Whether the rule passed or failed.
     * 
     */
    private @Nullable Boolean passed;
    /**
     * @return The count of rows scanned.
     * 
     */
    private @Nullable String rowCount;
    /**
     * @return The list of rules to evaluate against a data source. At least one rule is required.
     * Structure is documented below.
     * 
     */
    private @Nullable List<DatascanDataQualityResultRule> rules;
    /**
     * @return (Output)
     * The data scanned for this result.
     * Structure is documented below.
     * 
     */
    private @Nullable List<DatascanDataQualityResultScannedData> scannedDatas;

    private DatascanDataQualityResult() {}
    /**
     * @return A list of results at the dimension level.
     * Structure is documented below.
     * 
     */
    public List<DatascanDataQualityResultDimension> dimensions() {
        return this.dimensions == null ? List.of() : this.dimensions;
    }
    /**
     * @return (Output)
     * Whether the rule passed or failed.
     * 
     */
    public Optional<Boolean> passed() {
        return Optional.ofNullable(this.passed);
    }
    /**
     * @return The count of rows scanned.
     * 
     */
    public Optional<String> rowCount() {
        return Optional.ofNullable(this.rowCount);
    }
    /**
     * @return The list of rules to evaluate against a data source. At least one rule is required.
     * Structure is documented below.
     * 
     */
    public List<DatascanDataQualityResultRule> rules() {
        return this.rules == null ? List.of() : this.rules;
    }
    /**
     * @return (Output)
     * The data scanned for this result.
     * Structure is documented below.
     * 
     */
    public List<DatascanDataQualityResultScannedData> scannedDatas() {
        return this.scannedDatas == null ? List.of() : this.scannedDatas;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DatascanDataQualityResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<DatascanDataQualityResultDimension> dimensions;
        private @Nullable Boolean passed;
        private @Nullable String rowCount;
        private @Nullable List<DatascanDataQualityResultRule> rules;
        private @Nullable List<DatascanDataQualityResultScannedData> scannedDatas;
        public Builder() {}
        public Builder(DatascanDataQualityResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dimensions = defaults.dimensions;
    	      this.passed = defaults.passed;
    	      this.rowCount = defaults.rowCount;
    	      this.rules = defaults.rules;
    	      this.scannedDatas = defaults.scannedDatas;
        }

        @CustomType.Setter
        public Builder dimensions(@Nullable List<DatascanDataQualityResultDimension> dimensions) {
            this.dimensions = dimensions;
            return this;
        }
        public Builder dimensions(DatascanDataQualityResultDimension... dimensions) {
            return dimensions(List.of(dimensions));
        }
        @CustomType.Setter
        public Builder passed(@Nullable Boolean passed) {
            this.passed = passed;
            return this;
        }
        @CustomType.Setter
        public Builder rowCount(@Nullable String rowCount) {
            this.rowCount = rowCount;
            return this;
        }
        @CustomType.Setter
        public Builder rules(@Nullable List<DatascanDataQualityResultRule> rules) {
            this.rules = rules;
            return this;
        }
        public Builder rules(DatascanDataQualityResultRule... rules) {
            return rules(List.of(rules));
        }
        @CustomType.Setter
        public Builder scannedDatas(@Nullable List<DatascanDataQualityResultScannedData> scannedDatas) {
            this.scannedDatas = scannedDatas;
            return this;
        }
        public Builder scannedDatas(DatascanDataQualityResultScannedData... scannedDatas) {
            return scannedDatas(List.of(scannedDatas));
        }
        public DatascanDataQualityResult build() {
            final var o = new DatascanDataQualityResult();
            o.dimensions = dimensions;
            o.passed = passed;
            o.rowCount = rowCount;
            o.rules = rules;
            o.scannedDatas = scannedDatas;
            return o;
        }
    }
}
