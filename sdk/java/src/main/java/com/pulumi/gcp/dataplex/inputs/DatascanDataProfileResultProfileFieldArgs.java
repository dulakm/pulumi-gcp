// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.dataplex.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.dataplex.inputs.DatascanDataProfileResultProfileFieldProfileArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DatascanDataProfileResultProfileFieldArgs extends com.pulumi.resources.ResourceArgs {

    public static final DatascanDataProfileResultProfileFieldArgs Empty = new DatascanDataProfileResultProfileFieldArgs();

    /**
     * The mode of the field. Possible values include:
     * 1. REQUIRED, if it is a required field.
     * 2. NULLABLE, if it is an optional field.
     * 3. REPEATED, if it is a repeated field.
     * 
     */
    @Import(name="mode")
    private @Nullable Output<String> mode;

    /**
     * @return The mode of the field. Possible values include:
     * 1. REQUIRED, if it is a required field.
     * 2. NULLABLE, if it is an optional field.
     * 3. REPEATED, if it is a repeated field.
     * 
     */
    public Optional<Output<String>> mode() {
        return Optional.ofNullable(this.mode);
    }

    /**
     * A mutable name for the rule.
     * The name must contain only letters (a-z, A-Z), numbers (0-9), or hyphens (-).
     * The maximum length is 63 characters.
     * Must start with a letter.
     * Must end with a number or a letter.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return A mutable name for the rule.
     * The name must contain only letters (a-z, A-Z), numbers (0-9), or hyphens (-).
     * The maximum length is 63 characters.
     * Must start with a letter.
     * Must end with a number or a letter.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Profile information for the corresponding field.
     * Structure is documented below.
     * 
     */
    @Import(name="profile")
    private @Nullable Output<DatascanDataProfileResultProfileFieldProfileArgs> profile;

    /**
     * @return Profile information for the corresponding field.
     * Structure is documented below.
     * 
     */
    public Optional<Output<DatascanDataProfileResultProfileFieldProfileArgs>> profile() {
        return Optional.ofNullable(this.profile);
    }

    /**
     * The field data type.
     * 
     */
    @Import(name="type")
    private @Nullable Output<String> type;

    /**
     * @return The field data type.
     * 
     */
    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    private DatascanDataProfileResultProfileFieldArgs() {}

    private DatascanDataProfileResultProfileFieldArgs(DatascanDataProfileResultProfileFieldArgs $) {
        this.mode = $.mode;
        this.name = $.name;
        this.profile = $.profile;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DatascanDataProfileResultProfileFieldArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DatascanDataProfileResultProfileFieldArgs $;

        public Builder() {
            $ = new DatascanDataProfileResultProfileFieldArgs();
        }

        public Builder(DatascanDataProfileResultProfileFieldArgs defaults) {
            $ = new DatascanDataProfileResultProfileFieldArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param mode The mode of the field. Possible values include:
         * 1. REQUIRED, if it is a required field.
         * 2. NULLABLE, if it is an optional field.
         * 3. REPEATED, if it is a repeated field.
         * 
         * @return builder
         * 
         */
        public Builder mode(@Nullable Output<String> mode) {
            $.mode = mode;
            return this;
        }

        /**
         * @param mode The mode of the field. Possible values include:
         * 1. REQUIRED, if it is a required field.
         * 2. NULLABLE, if it is an optional field.
         * 3. REPEATED, if it is a repeated field.
         * 
         * @return builder
         * 
         */
        public Builder mode(String mode) {
            return mode(Output.of(mode));
        }

        /**
         * @param name A mutable name for the rule.
         * The name must contain only letters (a-z, A-Z), numbers (0-9), or hyphens (-).
         * The maximum length is 63 characters.
         * Must start with a letter.
         * Must end with a number or a letter.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name A mutable name for the rule.
         * The name must contain only letters (a-z, A-Z), numbers (0-9), or hyphens (-).
         * The maximum length is 63 characters.
         * Must start with a letter.
         * Must end with a number or a letter.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param profile Profile information for the corresponding field.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder profile(@Nullable Output<DatascanDataProfileResultProfileFieldProfileArgs> profile) {
            $.profile = profile;
            return this;
        }

        /**
         * @param profile Profile information for the corresponding field.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder profile(DatascanDataProfileResultProfileFieldProfileArgs profile) {
            return profile(Output.of(profile));
        }

        /**
         * @param type The field data type.
         * 
         * @return builder
         * 
         */
        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type The field data type.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public DatascanDataProfileResultProfileFieldArgs build() {
            return $;
        }
    }

}
