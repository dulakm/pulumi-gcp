// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.spanner.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class InstanceAutoscalingConfigAutoscalingLimitsArgs extends com.pulumi.resources.ResourceArgs {

    public static final InstanceAutoscalingConfigAutoscalingLimitsArgs Empty = new InstanceAutoscalingConfigAutoscalingLimitsArgs();

    /**
     * Specifies maximum number of processing units allocated to the instance.
     * If set, this number should be multiples of 1000 and be greater than or equal to
     * min_processing_units.
     * 
     */
    @Import(name="maxProcessingUnits")
    private @Nullable Output<Integer> maxProcessingUnits;

    /**
     * @return Specifies maximum number of processing units allocated to the instance.
     * If set, this number should be multiples of 1000 and be greater than or equal to
     * min_processing_units.
     * 
     */
    public Optional<Output<Integer>> maxProcessingUnits() {
        return Optional.ofNullable(this.maxProcessingUnits);
    }

    /**
     * Specifies minimum number of processing units allocated to the instance.
     * If set, this number should be multiples of 1000.
     * 
     */
    @Import(name="minProcessingUnits")
    private @Nullable Output<Integer> minProcessingUnits;

    /**
     * @return Specifies minimum number of processing units allocated to the instance.
     * If set, this number should be multiples of 1000.
     * 
     */
    public Optional<Output<Integer>> minProcessingUnits() {
        return Optional.ofNullable(this.minProcessingUnits);
    }

    private InstanceAutoscalingConfigAutoscalingLimitsArgs() {}

    private InstanceAutoscalingConfigAutoscalingLimitsArgs(InstanceAutoscalingConfigAutoscalingLimitsArgs $) {
        this.maxProcessingUnits = $.maxProcessingUnits;
        this.minProcessingUnits = $.minProcessingUnits;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InstanceAutoscalingConfigAutoscalingLimitsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InstanceAutoscalingConfigAutoscalingLimitsArgs $;

        public Builder() {
            $ = new InstanceAutoscalingConfigAutoscalingLimitsArgs();
        }

        public Builder(InstanceAutoscalingConfigAutoscalingLimitsArgs defaults) {
            $ = new InstanceAutoscalingConfigAutoscalingLimitsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param maxProcessingUnits Specifies maximum number of processing units allocated to the instance.
         * If set, this number should be multiples of 1000 and be greater than or equal to
         * min_processing_units.
         * 
         * @return builder
         * 
         */
        public Builder maxProcessingUnits(@Nullable Output<Integer> maxProcessingUnits) {
            $.maxProcessingUnits = maxProcessingUnits;
            return this;
        }

        /**
         * @param maxProcessingUnits Specifies maximum number of processing units allocated to the instance.
         * If set, this number should be multiples of 1000 and be greater than or equal to
         * min_processing_units.
         * 
         * @return builder
         * 
         */
        public Builder maxProcessingUnits(Integer maxProcessingUnits) {
            return maxProcessingUnits(Output.of(maxProcessingUnits));
        }

        /**
         * @param minProcessingUnits Specifies minimum number of processing units allocated to the instance.
         * If set, this number should be multiples of 1000.
         * 
         * @return builder
         * 
         */
        public Builder minProcessingUnits(@Nullable Output<Integer> minProcessingUnits) {
            $.minProcessingUnits = minProcessingUnits;
            return this;
        }

        /**
         * @param minProcessingUnits Specifies minimum number of processing units allocated to the instance.
         * If set, this number should be multiples of 1000.
         * 
         * @return builder
         * 
         */
        public Builder minProcessingUnits(Integer minProcessingUnits) {
            return minProcessingUnits(Output.of(minProcessingUnits));
        }

        public InstanceAutoscalingConfigAutoscalingLimitsArgs build() {
            return $;
        }
    }

}
