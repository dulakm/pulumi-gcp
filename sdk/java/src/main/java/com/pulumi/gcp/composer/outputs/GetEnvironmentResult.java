// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.composer.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.gcp.composer.outputs.GetEnvironmentConfig;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetEnvironmentResult {
    /**
     * @return Configuration parameters for the environment.
     * 
     */
    private List<GetEnvironmentConfig> configs;
    private Map<String,String> effectiveLabels;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private Map<String,String> labels;
    private String name;
    private @Nullable String project;
    private @Nullable String region;
    private Map<String,String> terraformLabels;

    private GetEnvironmentResult() {}
    /**
     * @return Configuration parameters for the environment.
     * 
     */
    public List<GetEnvironmentConfig> configs() {
        return this.configs;
    }
    public Map<String,String> effectiveLabels() {
        return this.effectiveLabels;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public Map<String,String> labels() {
        return this.labels;
    }
    public String name() {
        return this.name;
    }
    public Optional<String> project() {
        return Optional.ofNullable(this.project);
    }
    public Optional<String> region() {
        return Optional.ofNullable(this.region);
    }
    public Map<String,String> terraformLabels() {
        return this.terraformLabels;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetEnvironmentResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetEnvironmentConfig> configs;
        private Map<String,String> effectiveLabels;
        private String id;
        private Map<String,String> labels;
        private String name;
        private @Nullable String project;
        private @Nullable String region;
        private Map<String,String> terraformLabels;
        public Builder() {}
        public Builder(GetEnvironmentResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.configs = defaults.configs;
    	      this.effectiveLabels = defaults.effectiveLabels;
    	      this.id = defaults.id;
    	      this.labels = defaults.labels;
    	      this.name = defaults.name;
    	      this.project = defaults.project;
    	      this.region = defaults.region;
    	      this.terraformLabels = defaults.terraformLabels;
        }

        @CustomType.Setter
        public Builder configs(List<GetEnvironmentConfig> configs) {
            this.configs = Objects.requireNonNull(configs);
            return this;
        }
        public Builder configs(GetEnvironmentConfig... configs) {
            return configs(List.of(configs));
        }
        @CustomType.Setter
        public Builder effectiveLabels(Map<String,String> effectiveLabels) {
            this.effectiveLabels = Objects.requireNonNull(effectiveLabels);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder labels(Map<String,String> labels) {
            this.labels = Objects.requireNonNull(labels);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder project(@Nullable String project) {
            this.project = project;
            return this;
        }
        @CustomType.Setter
        public Builder region(@Nullable String region) {
            this.region = region;
            return this;
        }
        @CustomType.Setter
        public Builder terraformLabels(Map<String,String> terraformLabels) {
            this.terraformLabels = Objects.requireNonNull(terraformLabels);
            return this;
        }
        public GetEnvironmentResult build() {
            final var o = new GetEnvironmentResult();
            o.configs = configs;
            o.effectiveLabels = effectiveLabels;
            o.id = id;
            o.labels = labels;
            o.name = name;
            o.project = project;
            o.region = region;
            o.terraformLabels = terraformLabels;
            return o;
        }
    }
}
