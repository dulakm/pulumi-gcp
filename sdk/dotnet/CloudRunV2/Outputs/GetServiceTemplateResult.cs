// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.CloudRunV2.Outputs
{

    [OutputType]
    public sealed class GetServiceTemplateResult
    {
        public readonly ImmutableDictionary<string, string> Annotations;
        public readonly ImmutableArray<Outputs.GetServiceTemplateContainerResult> Containers;
        public readonly string EncryptionKey;
        public readonly string ExecutionEnvironment;
        public readonly ImmutableDictionary<string, string> Labels;
        public readonly int MaxInstanceRequestConcurrency;
        public readonly string Revision;
        public readonly ImmutableArray<Outputs.GetServiceTemplateScalingResult> Scalings;
        public readonly string ServiceAccount;
        public readonly bool SessionAffinity;
        public readonly string Timeout;
        public readonly ImmutableArray<Outputs.GetServiceTemplateVolumeResult> Volumes;
        public readonly ImmutableArray<Outputs.GetServiceTemplateVpcAccessResult> VpcAccesses;

        [OutputConstructor]
        private GetServiceTemplateResult(
            ImmutableDictionary<string, string> annotations,

            ImmutableArray<Outputs.GetServiceTemplateContainerResult> containers,

            string encryptionKey,

            string executionEnvironment,

            ImmutableDictionary<string, string> labels,

            int maxInstanceRequestConcurrency,

            string revision,

            ImmutableArray<Outputs.GetServiceTemplateScalingResult> scalings,

            string serviceAccount,

            bool sessionAffinity,

            string timeout,

            ImmutableArray<Outputs.GetServiceTemplateVolumeResult> volumes,

            ImmutableArray<Outputs.GetServiceTemplateVpcAccessResult> vpcAccesses)
        {
            Annotations = annotations;
            Containers = containers;
            EncryptionKey = encryptionKey;
            ExecutionEnvironment = executionEnvironment;
            Labels = labels;
            MaxInstanceRequestConcurrency = maxInstanceRequestConcurrency;
            Revision = revision;
            Scalings = scalings;
            ServiceAccount = serviceAccount;
            SessionAffinity = sessionAffinity;
            Timeout = timeout;
            Volumes = volumes;
            VpcAccesses = vpcAccesses;
        }
    }
}
