// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Organizations
{
    public static class GetIamPolicy
    {
        /// <summary>
        /// Generates an IAM policy document that may be referenced by and applied to
        /// other Google Cloud Platform IAM resources, such as the `gcp.projects.IamPolicy` resource.
        /// 
        /// **Note:** Please review the documentation of the resource that you will be using the datasource with. Some resources such as `gcp.projects.IamPolicy` and others have limitations in their API methods which are noted on their respective page.
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var admin = Gcp.Organizations.GetIamPolicy.Invoke(new()
        ///     {
        ///         AuditConfigs = new[]
        ///         {
        ///             new Gcp.Organizations.Inputs.GetIamPolicyAuditConfigInputArgs
        ///             {
        ///                 AuditLogConfigs = new[]
        ///                 {
        ///                     new Gcp.Organizations.Inputs.GetIamPolicyAuditConfigAuditLogConfigInputArgs
        ///                     {
        ///                         ExemptedMembers = new[]
        ///                         {
        ///                             "user:you@domain.com",
        ///                         },
        ///                         LogType = "DATA_READ",
        ///                     },
        ///                     new Gcp.Organizations.Inputs.GetIamPolicyAuditConfigAuditLogConfigInputArgs
        ///                     {
        ///                         LogType = "DATA_WRITE",
        ///                     },
        ///                     new Gcp.Organizations.Inputs.GetIamPolicyAuditConfigAuditLogConfigInputArgs
        ///                     {
        ///                         LogType = "ADMIN_READ",
        ///                     },
        ///                 },
        ///                 Service = "cloudkms.googleapis.com",
        ///             },
        ///         },
        ///         Bindings = new[]
        ///         {
        ///             new Gcp.Organizations.Inputs.GetIamPolicyBindingInputArgs
        ///             {
        ///                 Members = new[]
        ///                 {
        ///                     "serviceAccount:your-custom-sa@your-project.iam.gserviceaccount.com",
        ///                 },
        ///                 Role = "roles/compute.instanceAdmin",
        ///             },
        ///             new Gcp.Organizations.Inputs.GetIamPolicyBindingInputArgs
        ///             {
        ///                 Members = new[]
        ///                 {
        ///                     "user:alice@gmail.com",
        ///                 },
        ///                 Role = "roles/storage.objectViewer",
        ///             },
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// 
        /// This data source is used to define IAM policies to apply to other resources.
        /// Currently, defining a policy through a datasource and referencing that policy
        /// from another resource is the only way to apply an IAM policy to a resource.
        /// </summary>
        public static Task<GetIamPolicyResult> InvokeAsync(GetIamPolicyArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetIamPolicyResult>("gcp:organizations/getIamPolicy:getIamPolicy", args ?? new GetIamPolicyArgs(), options.WithDefaults());

        /// <summary>
        /// Generates an IAM policy document that may be referenced by and applied to
        /// other Google Cloud Platform IAM resources, such as the `gcp.projects.IamPolicy` resource.
        /// 
        /// **Note:** Please review the documentation of the resource that you will be using the datasource with. Some resources such as `gcp.projects.IamPolicy` and others have limitations in their API methods which are noted on their respective page.
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var admin = Gcp.Organizations.GetIamPolicy.Invoke(new()
        ///     {
        ///         AuditConfigs = new[]
        ///         {
        ///             new Gcp.Organizations.Inputs.GetIamPolicyAuditConfigInputArgs
        ///             {
        ///                 AuditLogConfigs = new[]
        ///                 {
        ///                     new Gcp.Organizations.Inputs.GetIamPolicyAuditConfigAuditLogConfigInputArgs
        ///                     {
        ///                         ExemptedMembers = new[]
        ///                         {
        ///                             "user:you@domain.com",
        ///                         },
        ///                         LogType = "DATA_READ",
        ///                     },
        ///                     new Gcp.Organizations.Inputs.GetIamPolicyAuditConfigAuditLogConfigInputArgs
        ///                     {
        ///                         LogType = "DATA_WRITE",
        ///                     },
        ///                     new Gcp.Organizations.Inputs.GetIamPolicyAuditConfigAuditLogConfigInputArgs
        ///                     {
        ///                         LogType = "ADMIN_READ",
        ///                     },
        ///                 },
        ///                 Service = "cloudkms.googleapis.com",
        ///             },
        ///         },
        ///         Bindings = new[]
        ///         {
        ///             new Gcp.Organizations.Inputs.GetIamPolicyBindingInputArgs
        ///             {
        ///                 Members = new[]
        ///                 {
        ///                     "serviceAccount:your-custom-sa@your-project.iam.gserviceaccount.com",
        ///                 },
        ///                 Role = "roles/compute.instanceAdmin",
        ///             },
        ///             new Gcp.Organizations.Inputs.GetIamPolicyBindingInputArgs
        ///             {
        ///                 Members = new[]
        ///                 {
        ///                     "user:alice@gmail.com",
        ///                 },
        ///                 Role = "roles/storage.objectViewer",
        ///             },
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// 
        /// This data source is used to define IAM policies to apply to other resources.
        /// Currently, defining a policy through a datasource and referencing that policy
        /// from another resource is the only way to apply an IAM policy to a resource.
        /// </summary>
        public static Output<GetIamPolicyResult> Invoke(GetIamPolicyInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetIamPolicyResult>("gcp:organizations/getIamPolicy:getIamPolicy", args ?? new GetIamPolicyInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetIamPolicyArgs : global::Pulumi.InvokeArgs
    {
        [Input("auditConfigs")]
        private List<Inputs.GetIamPolicyAuditConfigArgs>? _auditConfigs;

        /// <summary>
        /// A nested configuration block that defines logging additional configuration for your project. This field is only supported on `gcp.projects.IamPolicy`, `gcp.folder.IamPolicy` and `gcp.organizations.IamPolicy`.
        /// </summary>
        public List<Inputs.GetIamPolicyAuditConfigArgs> AuditConfigs
        {
            get => _auditConfigs ?? (_auditConfigs = new List<Inputs.GetIamPolicyAuditConfigArgs>());
            set => _auditConfigs = value;
        }

        [Input("bindings")]
        private List<Inputs.GetIamPolicyBindingArgs>? _bindings;

        /// <summary>
        /// A nested configuration block (described below)
        /// defining a binding to be included in the policy document. Multiple
        /// `binding` arguments are supported.
        /// 
        /// Each document configuration must have one or more `binding` blocks, which
        /// each accept the following arguments:
        /// </summary>
        public List<Inputs.GetIamPolicyBindingArgs> Bindings
        {
            get => _bindings ?? (_bindings = new List<Inputs.GetIamPolicyBindingArgs>());
            set => _bindings = value;
        }

        public GetIamPolicyArgs()
        {
        }
        public static new GetIamPolicyArgs Empty => new GetIamPolicyArgs();
    }

    public sealed class GetIamPolicyInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("auditConfigs")]
        private InputList<Inputs.GetIamPolicyAuditConfigInputArgs>? _auditConfigs;

        /// <summary>
        /// A nested configuration block that defines logging additional configuration for your project. This field is only supported on `gcp.projects.IamPolicy`, `gcp.folder.IamPolicy` and `gcp.organizations.IamPolicy`.
        /// </summary>
        public InputList<Inputs.GetIamPolicyAuditConfigInputArgs> AuditConfigs
        {
            get => _auditConfigs ?? (_auditConfigs = new InputList<Inputs.GetIamPolicyAuditConfigInputArgs>());
            set => _auditConfigs = value;
        }

        [Input("bindings")]
        private InputList<Inputs.GetIamPolicyBindingInputArgs>? _bindings;

        /// <summary>
        /// A nested configuration block (described below)
        /// defining a binding to be included in the policy document. Multiple
        /// `binding` arguments are supported.
        /// 
        /// Each document configuration must have one or more `binding` blocks, which
        /// each accept the following arguments:
        /// </summary>
        public InputList<Inputs.GetIamPolicyBindingInputArgs> Bindings
        {
            get => _bindings ?? (_bindings = new InputList<Inputs.GetIamPolicyBindingInputArgs>());
            set => _bindings = value;
        }

        public GetIamPolicyInvokeArgs()
        {
        }
        public static new GetIamPolicyInvokeArgs Empty => new GetIamPolicyInvokeArgs();
    }


    [OutputType]
    public sealed class GetIamPolicyResult
    {
        public readonly ImmutableArray<Outputs.GetIamPolicyAuditConfigResult> AuditConfigs;
        public readonly ImmutableArray<Outputs.GetIamPolicyBindingResult> Bindings;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The above bindings serialized in a format suitable for
        /// referencing from a resource that supports IAM.
        /// </summary>
        public readonly string PolicyData;

        [OutputConstructor]
        private GetIamPolicyResult(
            ImmutableArray<Outputs.GetIamPolicyAuditConfigResult> auditConfigs,

            ImmutableArray<Outputs.GetIamPolicyBindingResult> bindings,

            string id,

            string policyData)
        {
            AuditConfigs = auditConfigs;
            Bindings = bindings;
            Id = id;
            PolicyData = policyData;
        }
    }
}
