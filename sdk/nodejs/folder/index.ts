// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { AccessApprovalSettingsArgs, AccessApprovalSettingsState } from "./accessApprovalSettings";
export type AccessApprovalSettings = import("./accessApprovalSettings").AccessApprovalSettings;
export const AccessApprovalSettings: typeof import("./accessApprovalSettings").AccessApprovalSettings = null as any;
utilities.lazyLoad(exports, ["AccessApprovalSettings"], () => require("./accessApprovalSettings"));

export { GetIamPolicyArgs, GetIamPolicyResult, GetIamPolicyOutputArgs } from "./getIamPolicy";
export const getIamPolicy: typeof import("./getIamPolicy").getIamPolicy = null as any;
export const getIamPolicyOutput: typeof import("./getIamPolicy").getIamPolicyOutput = null as any;
utilities.lazyLoad(exports, ["getIamPolicy","getIamPolicyOutput"], () => require("./getIamPolicy"));

export { GetOrganizationPolicyArgs, GetOrganizationPolicyResult, GetOrganizationPolicyOutputArgs } from "./getOrganizationPolicy";
export const getOrganizationPolicy: typeof import("./getOrganizationPolicy").getOrganizationPolicy = null as any;
export const getOrganizationPolicyOutput: typeof import("./getOrganizationPolicy").getOrganizationPolicyOutput = null as any;
utilities.lazyLoad(exports, ["getOrganizationPolicy","getOrganizationPolicyOutput"], () => require("./getOrganizationPolicy"));

export { IamAuditConfigArgs, IamAuditConfigState } from "./iamAuditConfig";
export type IamAuditConfig = import("./iamAuditConfig").IamAuditConfig;
export const IamAuditConfig: typeof import("./iamAuditConfig").IamAuditConfig = null as any;
utilities.lazyLoad(exports, ["IamAuditConfig"], () => require("./iamAuditConfig"));

export { IamBindingArgs, IamBindingState } from "./iamBinding";
export type IamBinding = import("./iamBinding").IamBinding;
export const IamBinding: typeof import("./iamBinding").IamBinding = null as any;
utilities.lazyLoad(exports, ["IamBinding"], () => require("./iamBinding"));

export { IamMemberArgs, IamMemberState } from "./iamMember";
export type IamMember = import("./iamMember").IamMember;
export const IamMember: typeof import("./iamMember").IamMember = null as any;
utilities.lazyLoad(exports, ["IamMember"], () => require("./iamMember"));

export { IamPolicyArgs, IamPolicyState } from "./iamPolicy";
export type IamPolicy = import("./iamPolicy").IamPolicy;
export const IamPolicy: typeof import("./iamPolicy").IamPolicy = null as any;
utilities.lazyLoad(exports, ["IamPolicy"], () => require("./iamPolicy"));

export { OrganizationPolicyArgs, OrganizationPolicyState } from "./organizationPolicy";
export type OrganizationPolicy = import("./organizationPolicy").OrganizationPolicy;
export const OrganizationPolicy: typeof import("./organizationPolicy").OrganizationPolicy = null as any;
utilities.lazyLoad(exports, ["OrganizationPolicy"], () => require("./organizationPolicy"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "gcp:folder/accessApprovalSettings:AccessApprovalSettings":
                return new AccessApprovalSettings(name, <any>undefined, { urn })
            case "gcp:folder/iamAuditConfig:IamAuditConfig":
                return new IamAuditConfig(name, <any>undefined, { urn })
            case "gcp:folder/iamBinding:IamBinding":
                return new IamBinding(name, <any>undefined, { urn })
            case "gcp:folder/iamMember:IamMember":
                return new IamMember(name, <any>undefined, { urn })
            case "gcp:folder/iamPolicy:IamPolicy":
                return new IamPolicy(name, <any>undefined, { urn })
            case "gcp:folder/organizationPolicy:OrganizationPolicy":
                return new OrganizationPolicy(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("gcp", "folder/accessApprovalSettings", _module)
pulumi.runtime.registerResourceModule("gcp", "folder/iamAuditConfig", _module)
pulumi.runtime.registerResourceModule("gcp", "folder/iamBinding", _module)
pulumi.runtime.registerResourceModule("gcp", "folder/iamMember", _module)
pulumi.runtime.registerResourceModule("gcp", "folder/iamPolicy", _module)
pulumi.runtime.registerResourceModule("gcp", "folder/organizationPolicy", _module)
