// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package pubsub

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Retrieves the current IAM policy data for a Pubsub subscription.
//
// ## example
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/pubsub"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := pubsub.LookupSubscriptionIamPolicy(ctx, &pubsub.LookupSubscriptionIamPolicyArgs{
//				Subscription: google_pubsub_subscription.Subscription.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupSubscriptionIamPolicy(ctx *pulumi.Context, args *LookupSubscriptionIamPolicyArgs, opts ...pulumi.InvokeOption) (*LookupSubscriptionIamPolicyResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupSubscriptionIamPolicyResult
	err := ctx.Invoke("gcp:pubsub/getSubscriptionIamPolicy:getSubscriptionIamPolicy", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSubscriptionIamPolicy.
type LookupSubscriptionIamPolicyArgs struct {
	// The project in which the resource belongs. If it
	// is not provided, the provider project is used.
	Project *string `pulumi:"project"`
	// The subscription name or id to bind to attach IAM policy to.
	Subscription string `pulumi:"subscription"`
}

// A collection of values returned by getSubscriptionIamPolicy.
type LookupSubscriptionIamPolicyResult struct {
	// (Computed) The etag of the IAM policy.
	Etag string `pulumi:"etag"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// (Computed) The policy data
	PolicyData   string `pulumi:"policyData"`
	Project      string `pulumi:"project"`
	Subscription string `pulumi:"subscription"`
}

func LookupSubscriptionIamPolicyOutput(ctx *pulumi.Context, args LookupSubscriptionIamPolicyOutputArgs, opts ...pulumi.InvokeOption) LookupSubscriptionIamPolicyResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupSubscriptionIamPolicyResult, error) {
			args := v.(LookupSubscriptionIamPolicyArgs)
			r, err := LookupSubscriptionIamPolicy(ctx, &args, opts...)
			var s LookupSubscriptionIamPolicyResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupSubscriptionIamPolicyResultOutput)
}

// A collection of arguments for invoking getSubscriptionIamPolicy.
type LookupSubscriptionIamPolicyOutputArgs struct {
	// The project in which the resource belongs. If it
	// is not provided, the provider project is used.
	Project pulumi.StringPtrInput `pulumi:"project"`
	// The subscription name or id to bind to attach IAM policy to.
	Subscription pulumi.StringInput `pulumi:"subscription"`
}

func (LookupSubscriptionIamPolicyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSubscriptionIamPolicyArgs)(nil)).Elem()
}

// A collection of values returned by getSubscriptionIamPolicy.
type LookupSubscriptionIamPolicyResultOutput struct{ *pulumi.OutputState }

func (LookupSubscriptionIamPolicyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSubscriptionIamPolicyResult)(nil)).Elem()
}

func (o LookupSubscriptionIamPolicyResultOutput) ToLookupSubscriptionIamPolicyResultOutput() LookupSubscriptionIamPolicyResultOutput {
	return o
}

func (o LookupSubscriptionIamPolicyResultOutput) ToLookupSubscriptionIamPolicyResultOutputWithContext(ctx context.Context) LookupSubscriptionIamPolicyResultOutput {
	return o
}

// (Computed) The etag of the IAM policy.
func (o LookupSubscriptionIamPolicyResultOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSubscriptionIamPolicyResult) string { return v.Etag }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupSubscriptionIamPolicyResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSubscriptionIamPolicyResult) string { return v.Id }).(pulumi.StringOutput)
}

// (Computed) The policy data
func (o LookupSubscriptionIamPolicyResultOutput) PolicyData() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSubscriptionIamPolicyResult) string { return v.PolicyData }).(pulumi.StringOutput)
}

func (o LookupSubscriptionIamPolicyResultOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSubscriptionIamPolicyResult) string { return v.Project }).(pulumi.StringOutput)
}

func (o LookupSubscriptionIamPolicyResultOutput) Subscription() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSubscriptionIamPolicyResult) string { return v.Subscription }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupSubscriptionIamPolicyResultOutput{})
}
