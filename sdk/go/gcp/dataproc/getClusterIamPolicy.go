// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dataproc

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Retrieves the current IAM policy data for a Dataproc cluster.
//
// ## example
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/dataproc"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := dataproc.LookupClusterIamPolicy(ctx, &dataproc.LookupClusterIamPolicyArgs{
//				Cluster: google_dataproc_cluster.Cluster.Name,
//				Region:  pulumi.StringRef("us-central1"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupClusterIamPolicy(ctx *pulumi.Context, args *LookupClusterIamPolicyArgs, opts ...pulumi.InvokeOption) (*LookupClusterIamPolicyResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupClusterIamPolicyResult
	err := ctx.Invoke("gcp:dataproc/getClusterIamPolicy:getClusterIamPolicy", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getClusterIamPolicy.
type LookupClusterIamPolicyArgs struct {
	// The name or relative resource id of the cluster to manage IAM policies for.
	Cluster string  `pulumi:"cluster"`
	Project *string `pulumi:"project"`
	Region  *string `pulumi:"region"`
}

// A collection of values returned by getClusterIamPolicy.
type LookupClusterIamPolicyResult struct {
	Cluster string `pulumi:"cluster"`
	// (Computed) The etag of the IAM policy.
	Etag string `pulumi:"etag"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// (Computed) The policy data
	PolicyData string `pulumi:"policyData"`
	Project    string `pulumi:"project"`
	Region     string `pulumi:"region"`
}

func LookupClusterIamPolicyOutput(ctx *pulumi.Context, args LookupClusterIamPolicyOutputArgs, opts ...pulumi.InvokeOption) LookupClusterIamPolicyResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupClusterIamPolicyResult, error) {
			args := v.(LookupClusterIamPolicyArgs)
			r, err := LookupClusterIamPolicy(ctx, &args, opts...)
			var s LookupClusterIamPolicyResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupClusterIamPolicyResultOutput)
}

// A collection of arguments for invoking getClusterIamPolicy.
type LookupClusterIamPolicyOutputArgs struct {
	// The name or relative resource id of the cluster to manage IAM policies for.
	Cluster pulumi.StringInput    `pulumi:"cluster"`
	Project pulumi.StringPtrInput `pulumi:"project"`
	Region  pulumi.StringPtrInput `pulumi:"region"`
}

func (LookupClusterIamPolicyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupClusterIamPolicyArgs)(nil)).Elem()
}

// A collection of values returned by getClusterIamPolicy.
type LookupClusterIamPolicyResultOutput struct{ *pulumi.OutputState }

func (LookupClusterIamPolicyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupClusterIamPolicyResult)(nil)).Elem()
}

func (o LookupClusterIamPolicyResultOutput) ToLookupClusterIamPolicyResultOutput() LookupClusterIamPolicyResultOutput {
	return o
}

func (o LookupClusterIamPolicyResultOutput) ToLookupClusterIamPolicyResultOutputWithContext(ctx context.Context) LookupClusterIamPolicyResultOutput {
	return o
}

func (o LookupClusterIamPolicyResultOutput) Cluster() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClusterIamPolicyResult) string { return v.Cluster }).(pulumi.StringOutput)
}

// (Computed) The etag of the IAM policy.
func (o LookupClusterIamPolicyResultOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClusterIamPolicyResult) string { return v.Etag }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupClusterIamPolicyResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClusterIamPolicyResult) string { return v.Id }).(pulumi.StringOutput)
}

// (Computed) The policy data
func (o LookupClusterIamPolicyResultOutput) PolicyData() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClusterIamPolicyResult) string { return v.PolicyData }).(pulumi.StringOutput)
}

func (o LookupClusterIamPolicyResultOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClusterIamPolicyResult) string { return v.Project }).(pulumi.StringOutput)
}

func (o LookupClusterIamPolicyResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClusterIamPolicyResult) string { return v.Region }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupClusterIamPolicyResultOutput{})
}
