// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package storage

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Retrieves the current IAM policy data for bucket
//
// ## example
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/storage"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := storage.LookupBucketIamPolicy(ctx, &storage.LookupBucketIamPolicyArgs{
//				Bucket: google_storage_bucket.Default.Name,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupBucketIamPolicy(ctx *pulumi.Context, args *LookupBucketIamPolicyArgs, opts ...pulumi.InvokeOption) (*LookupBucketIamPolicyResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupBucketIamPolicyResult
	err := ctx.Invoke("gcp:storage/getBucketIamPolicy:getBucketIamPolicy", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getBucketIamPolicy.
type LookupBucketIamPolicyArgs struct {
	// Used to find the parent resource to bind the IAM policy to
	Bucket string `pulumi:"bucket"`
}

// A collection of values returned by getBucketIamPolicy.
type LookupBucketIamPolicyResult struct {
	Bucket string `pulumi:"bucket"`
	// (Computed) The etag of the IAM policy.
	Etag string `pulumi:"etag"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// (Required only by `storage.BucketIamPolicy`) The policy data generated by
	// a `organizations.getIamPolicy` data source.
	PolicyData string `pulumi:"policyData"`
}

func LookupBucketIamPolicyOutput(ctx *pulumi.Context, args LookupBucketIamPolicyOutputArgs, opts ...pulumi.InvokeOption) LookupBucketIamPolicyResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupBucketIamPolicyResult, error) {
			args := v.(LookupBucketIamPolicyArgs)
			r, err := LookupBucketIamPolicy(ctx, &args, opts...)
			var s LookupBucketIamPolicyResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupBucketIamPolicyResultOutput)
}

// A collection of arguments for invoking getBucketIamPolicy.
type LookupBucketIamPolicyOutputArgs struct {
	// Used to find the parent resource to bind the IAM policy to
	Bucket pulumi.StringInput `pulumi:"bucket"`
}

func (LookupBucketIamPolicyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupBucketIamPolicyArgs)(nil)).Elem()
}

// A collection of values returned by getBucketIamPolicy.
type LookupBucketIamPolicyResultOutput struct{ *pulumi.OutputState }

func (LookupBucketIamPolicyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupBucketIamPolicyResult)(nil)).Elem()
}

func (o LookupBucketIamPolicyResultOutput) ToLookupBucketIamPolicyResultOutput() LookupBucketIamPolicyResultOutput {
	return o
}

func (o LookupBucketIamPolicyResultOutput) ToLookupBucketIamPolicyResultOutputWithContext(ctx context.Context) LookupBucketIamPolicyResultOutput {
	return o
}

func (o LookupBucketIamPolicyResultOutput) Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBucketIamPolicyResult) string { return v.Bucket }).(pulumi.StringOutput)
}

// (Computed) The etag of the IAM policy.
func (o LookupBucketIamPolicyResultOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBucketIamPolicyResult) string { return v.Etag }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupBucketIamPolicyResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBucketIamPolicyResult) string { return v.Id }).(pulumi.StringOutput)
}

// (Required only by `storage.BucketIamPolicy`) The policy data generated by
// a `organizations.getIamPolicy` data source.
func (o LookupBucketIamPolicyResultOutput) PolicyData() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBucketIamPolicyResult) string { return v.PolicyData }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupBucketIamPolicyResultOutput{})
}
