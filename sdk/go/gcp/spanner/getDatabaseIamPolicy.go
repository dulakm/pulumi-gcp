// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package spanner

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Retrieves the current IAM policy data for a Spanner database.
//
// ## example
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/spanner"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := spanner.LookupDatabaseIamPolicy(ctx, &spanner.LookupDatabaseIamPolicyArgs{
//				Project:  pulumi.StringRef(google_spanner_database.Database.Project),
//				Database: google_spanner_database.Database.Name,
//				Instance: google_spanner_database.Database.Instance,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupDatabaseIamPolicy(ctx *pulumi.Context, args *LookupDatabaseIamPolicyArgs, opts ...pulumi.InvokeOption) (*LookupDatabaseIamPolicyResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupDatabaseIamPolicyResult
	err := ctx.Invoke("gcp:spanner/getDatabaseIamPolicy:getDatabaseIamPolicy", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDatabaseIamPolicy.
type LookupDatabaseIamPolicyArgs struct {
	// The name of the Spanner database.
	Database string `pulumi:"database"`
	// The name of the Spanner instance the database belongs to.
	Instance string `pulumi:"instance"`
	// The ID of the project in which the resource belongs. If it
	// is not provided, the provider project is used.
	Project *string `pulumi:"project"`
}

// A collection of values returned by getDatabaseIamPolicy.
type LookupDatabaseIamPolicyResult struct {
	Database string `pulumi:"database"`
	// (Computed) The etag of the IAM policy.
	Etag string `pulumi:"etag"`
	// The provider-assigned unique ID for this managed resource.
	Id       string `pulumi:"id"`
	Instance string `pulumi:"instance"`
	// (Computed) The policy data
	PolicyData string `pulumi:"policyData"`
	Project    string `pulumi:"project"`
}

func LookupDatabaseIamPolicyOutput(ctx *pulumi.Context, args LookupDatabaseIamPolicyOutputArgs, opts ...pulumi.InvokeOption) LookupDatabaseIamPolicyResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupDatabaseIamPolicyResult, error) {
			args := v.(LookupDatabaseIamPolicyArgs)
			r, err := LookupDatabaseIamPolicy(ctx, &args, opts...)
			var s LookupDatabaseIamPolicyResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupDatabaseIamPolicyResultOutput)
}

// A collection of arguments for invoking getDatabaseIamPolicy.
type LookupDatabaseIamPolicyOutputArgs struct {
	// The name of the Spanner database.
	Database pulumi.StringInput `pulumi:"database"`
	// The name of the Spanner instance the database belongs to.
	Instance pulumi.StringInput `pulumi:"instance"`
	// The ID of the project in which the resource belongs. If it
	// is not provided, the provider project is used.
	Project pulumi.StringPtrInput `pulumi:"project"`
}

func (LookupDatabaseIamPolicyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDatabaseIamPolicyArgs)(nil)).Elem()
}

// A collection of values returned by getDatabaseIamPolicy.
type LookupDatabaseIamPolicyResultOutput struct{ *pulumi.OutputState }

func (LookupDatabaseIamPolicyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDatabaseIamPolicyResult)(nil)).Elem()
}

func (o LookupDatabaseIamPolicyResultOutput) ToLookupDatabaseIamPolicyResultOutput() LookupDatabaseIamPolicyResultOutput {
	return o
}

func (o LookupDatabaseIamPolicyResultOutput) ToLookupDatabaseIamPolicyResultOutputWithContext(ctx context.Context) LookupDatabaseIamPolicyResultOutput {
	return o
}

func (o LookupDatabaseIamPolicyResultOutput) Database() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDatabaseIamPolicyResult) string { return v.Database }).(pulumi.StringOutput)
}

// (Computed) The etag of the IAM policy.
func (o LookupDatabaseIamPolicyResultOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDatabaseIamPolicyResult) string { return v.Etag }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupDatabaseIamPolicyResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDatabaseIamPolicyResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupDatabaseIamPolicyResultOutput) Instance() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDatabaseIamPolicyResult) string { return v.Instance }).(pulumi.StringOutput)
}

// (Computed) The policy data
func (o LookupDatabaseIamPolicyResultOutput) PolicyData() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDatabaseIamPolicyResult) string { return v.PolicyData }).(pulumi.StringOutput)
}

func (o LookupDatabaseIamPolicyResultOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDatabaseIamPolicyResult) string { return v.Project }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupDatabaseIamPolicyResultOutput{})
}
