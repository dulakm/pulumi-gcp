// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package kms

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Retrieves the current IAM policy data for a Google Cloud KMS key ring.
//
// ## example
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/kms"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := kms.LookupKeyRingIamPolicy(ctx, &kms.LookupKeyRingIamPolicyArgs{
//				KeyRingId: "{project_id}/{location_name}/{key_ring_name}",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupKeyRingIamPolicy(ctx *pulumi.Context, args *LookupKeyRingIamPolicyArgs, opts ...pulumi.InvokeOption) (*LookupKeyRingIamPolicyResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupKeyRingIamPolicyResult
	err := ctx.Invoke("gcp:kms/getKeyRingIamPolicy:getKeyRingIamPolicy", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getKeyRingIamPolicy.
type LookupKeyRingIamPolicyArgs struct {
	// The key ring ID, in the form
	// `{project_id}/{location_name}/{key_ring_name}` or
	// `{location_name}/{key_ring_name}`. In the second form, the provider's
	// project setting will be used as a fallback.
	KeyRingId string `pulumi:"keyRingId"`
}

// A collection of values returned by getKeyRingIamPolicy.
type LookupKeyRingIamPolicyResult struct {
	// (Computed) The etag of the IAM policy.
	Etag string `pulumi:"etag"`
	// The provider-assigned unique ID for this managed resource.
	Id        string `pulumi:"id"`
	KeyRingId string `pulumi:"keyRingId"`
	// (Computed) The policy data
	PolicyData string `pulumi:"policyData"`
}

func LookupKeyRingIamPolicyOutput(ctx *pulumi.Context, args LookupKeyRingIamPolicyOutputArgs, opts ...pulumi.InvokeOption) LookupKeyRingIamPolicyResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupKeyRingIamPolicyResult, error) {
			args := v.(LookupKeyRingIamPolicyArgs)
			r, err := LookupKeyRingIamPolicy(ctx, &args, opts...)
			var s LookupKeyRingIamPolicyResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupKeyRingIamPolicyResultOutput)
}

// A collection of arguments for invoking getKeyRingIamPolicy.
type LookupKeyRingIamPolicyOutputArgs struct {
	// The key ring ID, in the form
	// `{project_id}/{location_name}/{key_ring_name}` or
	// `{location_name}/{key_ring_name}`. In the second form, the provider's
	// project setting will be used as a fallback.
	KeyRingId pulumi.StringInput `pulumi:"keyRingId"`
}

func (LookupKeyRingIamPolicyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupKeyRingIamPolicyArgs)(nil)).Elem()
}

// A collection of values returned by getKeyRingIamPolicy.
type LookupKeyRingIamPolicyResultOutput struct{ *pulumi.OutputState }

func (LookupKeyRingIamPolicyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupKeyRingIamPolicyResult)(nil)).Elem()
}

func (o LookupKeyRingIamPolicyResultOutput) ToLookupKeyRingIamPolicyResultOutput() LookupKeyRingIamPolicyResultOutput {
	return o
}

func (o LookupKeyRingIamPolicyResultOutput) ToLookupKeyRingIamPolicyResultOutputWithContext(ctx context.Context) LookupKeyRingIamPolicyResultOutput {
	return o
}

// (Computed) The etag of the IAM policy.
func (o LookupKeyRingIamPolicyResultOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKeyRingIamPolicyResult) string { return v.Etag }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupKeyRingIamPolicyResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKeyRingIamPolicyResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupKeyRingIamPolicyResultOutput) KeyRingId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKeyRingIamPolicyResult) string { return v.KeyRingId }).(pulumi.StringOutput)
}

// (Computed) The policy data
func (o LookupKeyRingIamPolicyResultOutput) PolicyData() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKeyRingIamPolicyResult) string { return v.PolicyData }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupKeyRingIamPolicyResultOutput{})
}
