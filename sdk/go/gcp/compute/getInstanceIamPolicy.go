// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package compute

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Retrieves the current IAM policy data for instance
//
// ## example
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/compute"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := compute.LookupInstanceIamPolicy(ctx, &compute.LookupInstanceIamPolicyArgs{
//				Project:      pulumi.StringRef(google_compute_instance.Default.Project),
//				Zone:         pulumi.StringRef(google_compute_instance.Default.Zone),
//				InstanceName: google_compute_instance.Default.Name,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupInstanceIamPolicy(ctx *pulumi.Context, args *LookupInstanceIamPolicyArgs, opts ...pulumi.InvokeOption) (*LookupInstanceIamPolicyResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupInstanceIamPolicyResult
	err := ctx.Invoke("gcp:compute/getInstanceIamPolicy:getInstanceIamPolicy", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getInstanceIamPolicy.
type LookupInstanceIamPolicyArgs struct {
	// Used to find the parent resource to bind the IAM policy to
	InstanceName string `pulumi:"instanceName"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project *string `pulumi:"project"`
	// A reference to the zone where the machine resides. Used to find the parent resource to bind the IAM policy to. If not specified,
	// the value will be parsed from the identifier of the parent resource. If no zone is provided in the parent identifier and no
	// zone is specified, it is taken from the provider configuration.
	Zone *string `pulumi:"zone"`
}

// A collection of values returned by getInstanceIamPolicy.
type LookupInstanceIamPolicyResult struct {
	// (Computed) The etag of the IAM policy.
	Etag string `pulumi:"etag"`
	// The provider-assigned unique ID for this managed resource.
	Id           string `pulumi:"id"`
	InstanceName string `pulumi:"instanceName"`
	// (Required only by `compute.InstanceIamPolicy`) The policy data generated by
	// a `organizations.getIamPolicy` data source.
	PolicyData string `pulumi:"policyData"`
	Project    string `pulumi:"project"`
	Zone       string `pulumi:"zone"`
}

func LookupInstanceIamPolicyOutput(ctx *pulumi.Context, args LookupInstanceIamPolicyOutputArgs, opts ...pulumi.InvokeOption) LookupInstanceIamPolicyResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupInstanceIamPolicyResult, error) {
			args := v.(LookupInstanceIamPolicyArgs)
			r, err := LookupInstanceIamPolicy(ctx, &args, opts...)
			var s LookupInstanceIamPolicyResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupInstanceIamPolicyResultOutput)
}

// A collection of arguments for invoking getInstanceIamPolicy.
type LookupInstanceIamPolicyOutputArgs struct {
	// Used to find the parent resource to bind the IAM policy to
	InstanceName pulumi.StringInput `pulumi:"instanceName"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project pulumi.StringPtrInput `pulumi:"project"`
	// A reference to the zone where the machine resides. Used to find the parent resource to bind the IAM policy to. If not specified,
	// the value will be parsed from the identifier of the parent resource. If no zone is provided in the parent identifier and no
	// zone is specified, it is taken from the provider configuration.
	Zone pulumi.StringPtrInput `pulumi:"zone"`
}

func (LookupInstanceIamPolicyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupInstanceIamPolicyArgs)(nil)).Elem()
}

// A collection of values returned by getInstanceIamPolicy.
type LookupInstanceIamPolicyResultOutput struct{ *pulumi.OutputState }

func (LookupInstanceIamPolicyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupInstanceIamPolicyResult)(nil)).Elem()
}

func (o LookupInstanceIamPolicyResultOutput) ToLookupInstanceIamPolicyResultOutput() LookupInstanceIamPolicyResultOutput {
	return o
}

func (o LookupInstanceIamPolicyResultOutput) ToLookupInstanceIamPolicyResultOutputWithContext(ctx context.Context) LookupInstanceIamPolicyResultOutput {
	return o
}

// (Computed) The etag of the IAM policy.
func (o LookupInstanceIamPolicyResultOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceIamPolicyResult) string { return v.Etag }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupInstanceIamPolicyResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceIamPolicyResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupInstanceIamPolicyResultOutput) InstanceName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceIamPolicyResult) string { return v.InstanceName }).(pulumi.StringOutput)
}

// (Required only by `compute.InstanceIamPolicy`) The policy data generated by
// a `organizations.getIamPolicy` data source.
func (o LookupInstanceIamPolicyResultOutput) PolicyData() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceIamPolicyResult) string { return v.PolicyData }).(pulumi.StringOutput)
}

func (o LookupInstanceIamPolicyResultOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceIamPolicyResult) string { return v.Project }).(pulumi.StringOutput)
}

func (o LookupInstanceIamPolicyResultOutput) Zone() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceIamPolicyResult) string { return v.Zone }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupInstanceIamPolicyResultOutput{})
}
