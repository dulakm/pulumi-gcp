// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package organizations

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type AccessApprovalSettingsEnrolledService struct {
	// The product for which Access Approval will be enrolled. Allowed values are listed (case-sensitive):
	// all
	// appengine.googleapis.com
	// bigquery.googleapis.com
	// bigtable.googleapis.com
	// cloudkms.googleapis.com
	// compute.googleapis.com
	// dataflow.googleapis.com
	// iam.googleapis.com
	// pubsub.googleapis.com
	// storage.googleapis.com
	CloudProduct string `pulumi:"cloudProduct"`
	// The enrollment level of the service.
	// Default value is `BLOCK_ALL`.
	// Possible values are: `BLOCK_ALL`.
	//
	// ***
	EnrollmentLevel *string `pulumi:"enrollmentLevel"`
}

// AccessApprovalSettingsEnrolledServiceInput is an input type that accepts AccessApprovalSettingsEnrolledServiceArgs and AccessApprovalSettingsEnrolledServiceOutput values.
// You can construct a concrete instance of `AccessApprovalSettingsEnrolledServiceInput` via:
//
//	AccessApprovalSettingsEnrolledServiceArgs{...}
type AccessApprovalSettingsEnrolledServiceInput interface {
	pulumi.Input

	ToAccessApprovalSettingsEnrolledServiceOutput() AccessApprovalSettingsEnrolledServiceOutput
	ToAccessApprovalSettingsEnrolledServiceOutputWithContext(context.Context) AccessApprovalSettingsEnrolledServiceOutput
}

type AccessApprovalSettingsEnrolledServiceArgs struct {
	// The product for which Access Approval will be enrolled. Allowed values are listed (case-sensitive):
	// all
	// appengine.googleapis.com
	// bigquery.googleapis.com
	// bigtable.googleapis.com
	// cloudkms.googleapis.com
	// compute.googleapis.com
	// dataflow.googleapis.com
	// iam.googleapis.com
	// pubsub.googleapis.com
	// storage.googleapis.com
	CloudProduct pulumi.StringInput `pulumi:"cloudProduct"`
	// The enrollment level of the service.
	// Default value is `BLOCK_ALL`.
	// Possible values are: `BLOCK_ALL`.
	//
	// ***
	EnrollmentLevel pulumi.StringPtrInput `pulumi:"enrollmentLevel"`
}

func (AccessApprovalSettingsEnrolledServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessApprovalSettingsEnrolledService)(nil)).Elem()
}

func (i AccessApprovalSettingsEnrolledServiceArgs) ToAccessApprovalSettingsEnrolledServiceOutput() AccessApprovalSettingsEnrolledServiceOutput {
	return i.ToAccessApprovalSettingsEnrolledServiceOutputWithContext(context.Background())
}

func (i AccessApprovalSettingsEnrolledServiceArgs) ToAccessApprovalSettingsEnrolledServiceOutputWithContext(ctx context.Context) AccessApprovalSettingsEnrolledServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessApprovalSettingsEnrolledServiceOutput)
}

// AccessApprovalSettingsEnrolledServiceArrayInput is an input type that accepts AccessApprovalSettingsEnrolledServiceArray and AccessApprovalSettingsEnrolledServiceArrayOutput values.
// You can construct a concrete instance of `AccessApprovalSettingsEnrolledServiceArrayInput` via:
//
//	AccessApprovalSettingsEnrolledServiceArray{ AccessApprovalSettingsEnrolledServiceArgs{...} }
type AccessApprovalSettingsEnrolledServiceArrayInput interface {
	pulumi.Input

	ToAccessApprovalSettingsEnrolledServiceArrayOutput() AccessApprovalSettingsEnrolledServiceArrayOutput
	ToAccessApprovalSettingsEnrolledServiceArrayOutputWithContext(context.Context) AccessApprovalSettingsEnrolledServiceArrayOutput
}

type AccessApprovalSettingsEnrolledServiceArray []AccessApprovalSettingsEnrolledServiceInput

func (AccessApprovalSettingsEnrolledServiceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccessApprovalSettingsEnrolledService)(nil)).Elem()
}

func (i AccessApprovalSettingsEnrolledServiceArray) ToAccessApprovalSettingsEnrolledServiceArrayOutput() AccessApprovalSettingsEnrolledServiceArrayOutput {
	return i.ToAccessApprovalSettingsEnrolledServiceArrayOutputWithContext(context.Background())
}

func (i AccessApprovalSettingsEnrolledServiceArray) ToAccessApprovalSettingsEnrolledServiceArrayOutputWithContext(ctx context.Context) AccessApprovalSettingsEnrolledServiceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessApprovalSettingsEnrolledServiceArrayOutput)
}

type AccessApprovalSettingsEnrolledServiceOutput struct{ *pulumi.OutputState }

func (AccessApprovalSettingsEnrolledServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessApprovalSettingsEnrolledService)(nil)).Elem()
}

func (o AccessApprovalSettingsEnrolledServiceOutput) ToAccessApprovalSettingsEnrolledServiceOutput() AccessApprovalSettingsEnrolledServiceOutput {
	return o
}

func (o AccessApprovalSettingsEnrolledServiceOutput) ToAccessApprovalSettingsEnrolledServiceOutputWithContext(ctx context.Context) AccessApprovalSettingsEnrolledServiceOutput {
	return o
}

// The product for which Access Approval will be enrolled. Allowed values are listed (case-sensitive):
// all
// appengine.googleapis.com
// bigquery.googleapis.com
// bigtable.googleapis.com
// cloudkms.googleapis.com
// compute.googleapis.com
// dataflow.googleapis.com
// iam.googleapis.com
// pubsub.googleapis.com
// storage.googleapis.com
func (o AccessApprovalSettingsEnrolledServiceOutput) CloudProduct() pulumi.StringOutput {
	return o.ApplyT(func(v AccessApprovalSettingsEnrolledService) string { return v.CloudProduct }).(pulumi.StringOutput)
}

// The enrollment level of the service.
// Default value is `BLOCK_ALL`.
// Possible values are: `BLOCK_ALL`.
//
// ***
func (o AccessApprovalSettingsEnrolledServiceOutput) EnrollmentLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessApprovalSettingsEnrolledService) *string { return v.EnrollmentLevel }).(pulumi.StringPtrOutput)
}

type AccessApprovalSettingsEnrolledServiceArrayOutput struct{ *pulumi.OutputState }

func (AccessApprovalSettingsEnrolledServiceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccessApprovalSettingsEnrolledService)(nil)).Elem()
}

func (o AccessApprovalSettingsEnrolledServiceArrayOutput) ToAccessApprovalSettingsEnrolledServiceArrayOutput() AccessApprovalSettingsEnrolledServiceArrayOutput {
	return o
}

func (o AccessApprovalSettingsEnrolledServiceArrayOutput) ToAccessApprovalSettingsEnrolledServiceArrayOutputWithContext(ctx context.Context) AccessApprovalSettingsEnrolledServiceArrayOutput {
	return o
}

func (o AccessApprovalSettingsEnrolledServiceArrayOutput) Index(i pulumi.IntInput) AccessApprovalSettingsEnrolledServiceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AccessApprovalSettingsEnrolledService {
		return vs[0].([]AccessApprovalSettingsEnrolledService)[vs[1].(int)]
	}).(AccessApprovalSettingsEnrolledServiceOutput)
}

type IamAuditConfigAuditLogConfig struct {
	// Identities that do not cause logging for this type of permission.
	// Each entry can have one of the following values:
	// * **user:{emailid}**: An email address that represents a specific Google account. For example, alice@gmail.com or joe@example.com.
	// * **serviceAccount:{emailid}**: An email address that represents a service account. For example, my-other-app@appspot.gserviceaccount.com.
	// * **group:{emailid}**: An email address that represents a Google group. For example, admins@example.com.
	// * **domain:{domain}**: A G Suite domain (primary, instead of alias) name that represents all the users of that domain. For example, google.com or example.com.
	ExemptedMembers []string `pulumi:"exemptedMembers"`
	// Permission type for which logging is to be configured.  Must be one of `DATA_READ`, `DATA_WRITE`, or `ADMIN_READ`.
	LogType string `pulumi:"logType"`
}

// IamAuditConfigAuditLogConfigInput is an input type that accepts IamAuditConfigAuditLogConfigArgs and IamAuditConfigAuditLogConfigOutput values.
// You can construct a concrete instance of `IamAuditConfigAuditLogConfigInput` via:
//
//	IamAuditConfigAuditLogConfigArgs{...}
type IamAuditConfigAuditLogConfigInput interface {
	pulumi.Input

	ToIamAuditConfigAuditLogConfigOutput() IamAuditConfigAuditLogConfigOutput
	ToIamAuditConfigAuditLogConfigOutputWithContext(context.Context) IamAuditConfigAuditLogConfigOutput
}

type IamAuditConfigAuditLogConfigArgs struct {
	// Identities that do not cause logging for this type of permission.
	// Each entry can have one of the following values:
	// * **user:{emailid}**: An email address that represents a specific Google account. For example, alice@gmail.com or joe@example.com.
	// * **serviceAccount:{emailid}**: An email address that represents a service account. For example, my-other-app@appspot.gserviceaccount.com.
	// * **group:{emailid}**: An email address that represents a Google group. For example, admins@example.com.
	// * **domain:{domain}**: A G Suite domain (primary, instead of alias) name that represents all the users of that domain. For example, google.com or example.com.
	ExemptedMembers pulumi.StringArrayInput `pulumi:"exemptedMembers"`
	// Permission type for which logging is to be configured.  Must be one of `DATA_READ`, `DATA_WRITE`, or `ADMIN_READ`.
	LogType pulumi.StringInput `pulumi:"logType"`
}

func (IamAuditConfigAuditLogConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IamAuditConfigAuditLogConfig)(nil)).Elem()
}

func (i IamAuditConfigAuditLogConfigArgs) ToIamAuditConfigAuditLogConfigOutput() IamAuditConfigAuditLogConfigOutput {
	return i.ToIamAuditConfigAuditLogConfigOutputWithContext(context.Background())
}

func (i IamAuditConfigAuditLogConfigArgs) ToIamAuditConfigAuditLogConfigOutputWithContext(ctx context.Context) IamAuditConfigAuditLogConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IamAuditConfigAuditLogConfigOutput)
}

// IamAuditConfigAuditLogConfigArrayInput is an input type that accepts IamAuditConfigAuditLogConfigArray and IamAuditConfigAuditLogConfigArrayOutput values.
// You can construct a concrete instance of `IamAuditConfigAuditLogConfigArrayInput` via:
//
//	IamAuditConfigAuditLogConfigArray{ IamAuditConfigAuditLogConfigArgs{...} }
type IamAuditConfigAuditLogConfigArrayInput interface {
	pulumi.Input

	ToIamAuditConfigAuditLogConfigArrayOutput() IamAuditConfigAuditLogConfigArrayOutput
	ToIamAuditConfigAuditLogConfigArrayOutputWithContext(context.Context) IamAuditConfigAuditLogConfigArrayOutput
}

type IamAuditConfigAuditLogConfigArray []IamAuditConfigAuditLogConfigInput

func (IamAuditConfigAuditLogConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IamAuditConfigAuditLogConfig)(nil)).Elem()
}

func (i IamAuditConfigAuditLogConfigArray) ToIamAuditConfigAuditLogConfigArrayOutput() IamAuditConfigAuditLogConfigArrayOutput {
	return i.ToIamAuditConfigAuditLogConfigArrayOutputWithContext(context.Background())
}

func (i IamAuditConfigAuditLogConfigArray) ToIamAuditConfigAuditLogConfigArrayOutputWithContext(ctx context.Context) IamAuditConfigAuditLogConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IamAuditConfigAuditLogConfigArrayOutput)
}

type IamAuditConfigAuditLogConfigOutput struct{ *pulumi.OutputState }

func (IamAuditConfigAuditLogConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IamAuditConfigAuditLogConfig)(nil)).Elem()
}

func (o IamAuditConfigAuditLogConfigOutput) ToIamAuditConfigAuditLogConfigOutput() IamAuditConfigAuditLogConfigOutput {
	return o
}

func (o IamAuditConfigAuditLogConfigOutput) ToIamAuditConfigAuditLogConfigOutputWithContext(ctx context.Context) IamAuditConfigAuditLogConfigOutput {
	return o
}

// Identities that do not cause logging for this type of permission.
// Each entry can have one of the following values:
// * **user:{emailid}**: An email address that represents a specific Google account. For example, alice@gmail.com or joe@example.com.
// * **serviceAccount:{emailid}**: An email address that represents a service account. For example, my-other-app@appspot.gserviceaccount.com.
// * **group:{emailid}**: An email address that represents a Google group. For example, admins@example.com.
// * **domain:{domain}**: A G Suite domain (primary, instead of alias) name that represents all the users of that domain. For example, google.com or example.com.
func (o IamAuditConfigAuditLogConfigOutput) ExemptedMembers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IamAuditConfigAuditLogConfig) []string { return v.ExemptedMembers }).(pulumi.StringArrayOutput)
}

// Permission type for which logging is to be configured.  Must be one of `DATA_READ`, `DATA_WRITE`, or `ADMIN_READ`.
func (o IamAuditConfigAuditLogConfigOutput) LogType() pulumi.StringOutput {
	return o.ApplyT(func(v IamAuditConfigAuditLogConfig) string { return v.LogType }).(pulumi.StringOutput)
}

type IamAuditConfigAuditLogConfigArrayOutput struct{ *pulumi.OutputState }

func (IamAuditConfigAuditLogConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IamAuditConfigAuditLogConfig)(nil)).Elem()
}

func (o IamAuditConfigAuditLogConfigArrayOutput) ToIamAuditConfigAuditLogConfigArrayOutput() IamAuditConfigAuditLogConfigArrayOutput {
	return o
}

func (o IamAuditConfigAuditLogConfigArrayOutput) ToIamAuditConfigAuditLogConfigArrayOutputWithContext(ctx context.Context) IamAuditConfigAuditLogConfigArrayOutput {
	return o
}

func (o IamAuditConfigAuditLogConfigArrayOutput) Index(i pulumi.IntInput) IamAuditConfigAuditLogConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IamAuditConfigAuditLogConfig {
		return vs[0].([]IamAuditConfigAuditLogConfig)[vs[1].(int)]
	}).(IamAuditConfigAuditLogConfigOutput)
}

type IamBindingCondition struct {
	Description *string `pulumi:"description"`
	Expression  string  `pulumi:"expression"`
	Title       string  `pulumi:"title"`
}

// IamBindingConditionInput is an input type that accepts IamBindingConditionArgs and IamBindingConditionOutput values.
// You can construct a concrete instance of `IamBindingConditionInput` via:
//
//	IamBindingConditionArgs{...}
type IamBindingConditionInput interface {
	pulumi.Input

	ToIamBindingConditionOutput() IamBindingConditionOutput
	ToIamBindingConditionOutputWithContext(context.Context) IamBindingConditionOutput
}

type IamBindingConditionArgs struct {
	Description pulumi.StringPtrInput `pulumi:"description"`
	Expression  pulumi.StringInput    `pulumi:"expression"`
	Title       pulumi.StringInput    `pulumi:"title"`
}

func (IamBindingConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IamBindingCondition)(nil)).Elem()
}

func (i IamBindingConditionArgs) ToIamBindingConditionOutput() IamBindingConditionOutput {
	return i.ToIamBindingConditionOutputWithContext(context.Background())
}

func (i IamBindingConditionArgs) ToIamBindingConditionOutputWithContext(ctx context.Context) IamBindingConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IamBindingConditionOutput)
}

func (i IamBindingConditionArgs) ToIamBindingConditionPtrOutput() IamBindingConditionPtrOutput {
	return i.ToIamBindingConditionPtrOutputWithContext(context.Background())
}

func (i IamBindingConditionArgs) ToIamBindingConditionPtrOutputWithContext(ctx context.Context) IamBindingConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IamBindingConditionOutput).ToIamBindingConditionPtrOutputWithContext(ctx)
}

// IamBindingConditionPtrInput is an input type that accepts IamBindingConditionArgs, IamBindingConditionPtr and IamBindingConditionPtrOutput values.
// You can construct a concrete instance of `IamBindingConditionPtrInput` via:
//
//	        IamBindingConditionArgs{...}
//
//	or:
//
//	        nil
type IamBindingConditionPtrInput interface {
	pulumi.Input

	ToIamBindingConditionPtrOutput() IamBindingConditionPtrOutput
	ToIamBindingConditionPtrOutputWithContext(context.Context) IamBindingConditionPtrOutput
}

type iamBindingConditionPtrType IamBindingConditionArgs

func IamBindingConditionPtr(v *IamBindingConditionArgs) IamBindingConditionPtrInput {
	return (*iamBindingConditionPtrType)(v)
}

func (*iamBindingConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IamBindingCondition)(nil)).Elem()
}

func (i *iamBindingConditionPtrType) ToIamBindingConditionPtrOutput() IamBindingConditionPtrOutput {
	return i.ToIamBindingConditionPtrOutputWithContext(context.Background())
}

func (i *iamBindingConditionPtrType) ToIamBindingConditionPtrOutputWithContext(ctx context.Context) IamBindingConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IamBindingConditionPtrOutput)
}

type IamBindingConditionOutput struct{ *pulumi.OutputState }

func (IamBindingConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IamBindingCondition)(nil)).Elem()
}

func (o IamBindingConditionOutput) ToIamBindingConditionOutput() IamBindingConditionOutput {
	return o
}

func (o IamBindingConditionOutput) ToIamBindingConditionOutputWithContext(ctx context.Context) IamBindingConditionOutput {
	return o
}

func (o IamBindingConditionOutput) ToIamBindingConditionPtrOutput() IamBindingConditionPtrOutput {
	return o.ToIamBindingConditionPtrOutputWithContext(context.Background())
}

func (o IamBindingConditionOutput) ToIamBindingConditionPtrOutputWithContext(ctx context.Context) IamBindingConditionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IamBindingCondition) *IamBindingCondition {
		return &v
	}).(IamBindingConditionPtrOutput)
}

func (o IamBindingConditionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IamBindingCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o IamBindingConditionOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v IamBindingCondition) string { return v.Expression }).(pulumi.StringOutput)
}

func (o IamBindingConditionOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v IamBindingCondition) string { return v.Title }).(pulumi.StringOutput)
}

type IamBindingConditionPtrOutput struct{ *pulumi.OutputState }

func (IamBindingConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IamBindingCondition)(nil)).Elem()
}

func (o IamBindingConditionPtrOutput) ToIamBindingConditionPtrOutput() IamBindingConditionPtrOutput {
	return o
}

func (o IamBindingConditionPtrOutput) ToIamBindingConditionPtrOutputWithContext(ctx context.Context) IamBindingConditionPtrOutput {
	return o
}

func (o IamBindingConditionPtrOutput) Elem() IamBindingConditionOutput {
	return o.ApplyT(func(v *IamBindingCondition) IamBindingCondition {
		if v != nil {
			return *v
		}
		var ret IamBindingCondition
		return ret
	}).(IamBindingConditionOutput)
}

func (o IamBindingConditionPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IamBindingCondition) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

func (o IamBindingConditionPtrOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IamBindingCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Expression
	}).(pulumi.StringPtrOutput)
}

func (o IamBindingConditionPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IamBindingCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

type IamMemberCondition struct {
	// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
	//
	// > **Warning:** This provider considers the `role` and condition contents (`title`+`description`+`expression`) as the
	// identifier for the binding. This means that if any part of the condition is changed out-of-band, the provider will
	// consider it to be an entirely different resource and will treat it as such.
	Description *string `pulumi:"description"`
	// Textual representation of an expression in Common Expression Language syntax.
	Expression string `pulumi:"expression"`
	// A title for the expression, i.e. a short string describing its purpose.
	Title string `pulumi:"title"`
}

// IamMemberConditionInput is an input type that accepts IamMemberConditionArgs and IamMemberConditionOutput values.
// You can construct a concrete instance of `IamMemberConditionInput` via:
//
//	IamMemberConditionArgs{...}
type IamMemberConditionInput interface {
	pulumi.Input

	ToIamMemberConditionOutput() IamMemberConditionOutput
	ToIamMemberConditionOutputWithContext(context.Context) IamMemberConditionOutput
}

type IamMemberConditionArgs struct {
	// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
	//
	// > **Warning:** This provider considers the `role` and condition contents (`title`+`description`+`expression`) as the
	// identifier for the binding. This means that if any part of the condition is changed out-of-band, the provider will
	// consider it to be an entirely different resource and will treat it as such.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Textual representation of an expression in Common Expression Language syntax.
	Expression pulumi.StringInput `pulumi:"expression"`
	// A title for the expression, i.e. a short string describing its purpose.
	Title pulumi.StringInput `pulumi:"title"`
}

func (IamMemberConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IamMemberCondition)(nil)).Elem()
}

func (i IamMemberConditionArgs) ToIamMemberConditionOutput() IamMemberConditionOutput {
	return i.ToIamMemberConditionOutputWithContext(context.Background())
}

func (i IamMemberConditionArgs) ToIamMemberConditionOutputWithContext(ctx context.Context) IamMemberConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IamMemberConditionOutput)
}

func (i IamMemberConditionArgs) ToIamMemberConditionPtrOutput() IamMemberConditionPtrOutput {
	return i.ToIamMemberConditionPtrOutputWithContext(context.Background())
}

func (i IamMemberConditionArgs) ToIamMemberConditionPtrOutputWithContext(ctx context.Context) IamMemberConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IamMemberConditionOutput).ToIamMemberConditionPtrOutputWithContext(ctx)
}

// IamMemberConditionPtrInput is an input type that accepts IamMemberConditionArgs, IamMemberConditionPtr and IamMemberConditionPtrOutput values.
// You can construct a concrete instance of `IamMemberConditionPtrInput` via:
//
//	        IamMemberConditionArgs{...}
//
//	or:
//
//	        nil
type IamMemberConditionPtrInput interface {
	pulumi.Input

	ToIamMemberConditionPtrOutput() IamMemberConditionPtrOutput
	ToIamMemberConditionPtrOutputWithContext(context.Context) IamMemberConditionPtrOutput
}

type iamMemberConditionPtrType IamMemberConditionArgs

func IamMemberConditionPtr(v *IamMemberConditionArgs) IamMemberConditionPtrInput {
	return (*iamMemberConditionPtrType)(v)
}

func (*iamMemberConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IamMemberCondition)(nil)).Elem()
}

func (i *iamMemberConditionPtrType) ToIamMemberConditionPtrOutput() IamMemberConditionPtrOutput {
	return i.ToIamMemberConditionPtrOutputWithContext(context.Background())
}

func (i *iamMemberConditionPtrType) ToIamMemberConditionPtrOutputWithContext(ctx context.Context) IamMemberConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IamMemberConditionPtrOutput)
}

type IamMemberConditionOutput struct{ *pulumi.OutputState }

func (IamMemberConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IamMemberCondition)(nil)).Elem()
}

func (o IamMemberConditionOutput) ToIamMemberConditionOutput() IamMemberConditionOutput {
	return o
}

func (o IamMemberConditionOutput) ToIamMemberConditionOutputWithContext(ctx context.Context) IamMemberConditionOutput {
	return o
}

func (o IamMemberConditionOutput) ToIamMemberConditionPtrOutput() IamMemberConditionPtrOutput {
	return o.ToIamMemberConditionPtrOutputWithContext(context.Background())
}

func (o IamMemberConditionOutput) ToIamMemberConditionPtrOutputWithContext(ctx context.Context) IamMemberConditionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IamMemberCondition) *IamMemberCondition {
		return &v
	}).(IamMemberConditionPtrOutput)
}

// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
//
// > **Warning:** This provider considers the `role` and condition contents (`title`+`description`+`expression`) as the
// identifier for the binding. This means that if any part of the condition is changed out-of-band, the provider will
// consider it to be an entirely different resource and will treat it as such.
func (o IamMemberConditionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IamMemberCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Textual representation of an expression in Common Expression Language syntax.
func (o IamMemberConditionOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v IamMemberCondition) string { return v.Expression }).(pulumi.StringOutput)
}

// A title for the expression, i.e. a short string describing its purpose.
func (o IamMemberConditionOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v IamMemberCondition) string { return v.Title }).(pulumi.StringOutput)
}

type IamMemberConditionPtrOutput struct{ *pulumi.OutputState }

func (IamMemberConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IamMemberCondition)(nil)).Elem()
}

func (o IamMemberConditionPtrOutput) ToIamMemberConditionPtrOutput() IamMemberConditionPtrOutput {
	return o
}

func (o IamMemberConditionPtrOutput) ToIamMemberConditionPtrOutputWithContext(ctx context.Context) IamMemberConditionPtrOutput {
	return o
}

func (o IamMemberConditionPtrOutput) Elem() IamMemberConditionOutput {
	return o.ApplyT(func(v *IamMemberCondition) IamMemberCondition {
		if v != nil {
			return *v
		}
		var ret IamMemberCondition
		return ret
	}).(IamMemberConditionOutput)
}

// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
//
// > **Warning:** This provider considers the `role` and condition contents (`title`+`description`+`expression`) as the
// identifier for the binding. This means that if any part of the condition is changed out-of-band, the provider will
// consider it to be an entirely different resource and will treat it as such.
func (o IamMemberConditionPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IamMemberCondition) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Textual representation of an expression in Common Expression Language syntax.
func (o IamMemberConditionPtrOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IamMemberCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Expression
	}).(pulumi.StringPtrOutput)
}

// A title for the expression, i.e. a short string describing its purpose.
func (o IamMemberConditionPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IamMemberCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

type PolicyBooleanPolicy struct {
	// If true, then the Policy is enforced. If false, then any configuration is acceptable.
	Enforced bool `pulumi:"enforced"`
}

// PolicyBooleanPolicyInput is an input type that accepts PolicyBooleanPolicyArgs and PolicyBooleanPolicyOutput values.
// You can construct a concrete instance of `PolicyBooleanPolicyInput` via:
//
//	PolicyBooleanPolicyArgs{...}
type PolicyBooleanPolicyInput interface {
	pulumi.Input

	ToPolicyBooleanPolicyOutput() PolicyBooleanPolicyOutput
	ToPolicyBooleanPolicyOutputWithContext(context.Context) PolicyBooleanPolicyOutput
}

type PolicyBooleanPolicyArgs struct {
	// If true, then the Policy is enforced. If false, then any configuration is acceptable.
	Enforced pulumi.BoolInput `pulumi:"enforced"`
}

func (PolicyBooleanPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyBooleanPolicy)(nil)).Elem()
}

func (i PolicyBooleanPolicyArgs) ToPolicyBooleanPolicyOutput() PolicyBooleanPolicyOutput {
	return i.ToPolicyBooleanPolicyOutputWithContext(context.Background())
}

func (i PolicyBooleanPolicyArgs) ToPolicyBooleanPolicyOutputWithContext(ctx context.Context) PolicyBooleanPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyBooleanPolicyOutput)
}

func (i PolicyBooleanPolicyArgs) ToPolicyBooleanPolicyPtrOutput() PolicyBooleanPolicyPtrOutput {
	return i.ToPolicyBooleanPolicyPtrOutputWithContext(context.Background())
}

func (i PolicyBooleanPolicyArgs) ToPolicyBooleanPolicyPtrOutputWithContext(ctx context.Context) PolicyBooleanPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyBooleanPolicyOutput).ToPolicyBooleanPolicyPtrOutputWithContext(ctx)
}

// PolicyBooleanPolicyPtrInput is an input type that accepts PolicyBooleanPolicyArgs, PolicyBooleanPolicyPtr and PolicyBooleanPolicyPtrOutput values.
// You can construct a concrete instance of `PolicyBooleanPolicyPtrInput` via:
//
//	        PolicyBooleanPolicyArgs{...}
//
//	or:
//
//	        nil
type PolicyBooleanPolicyPtrInput interface {
	pulumi.Input

	ToPolicyBooleanPolicyPtrOutput() PolicyBooleanPolicyPtrOutput
	ToPolicyBooleanPolicyPtrOutputWithContext(context.Context) PolicyBooleanPolicyPtrOutput
}

type policyBooleanPolicyPtrType PolicyBooleanPolicyArgs

func PolicyBooleanPolicyPtr(v *PolicyBooleanPolicyArgs) PolicyBooleanPolicyPtrInput {
	return (*policyBooleanPolicyPtrType)(v)
}

func (*policyBooleanPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyBooleanPolicy)(nil)).Elem()
}

func (i *policyBooleanPolicyPtrType) ToPolicyBooleanPolicyPtrOutput() PolicyBooleanPolicyPtrOutput {
	return i.ToPolicyBooleanPolicyPtrOutputWithContext(context.Background())
}

func (i *policyBooleanPolicyPtrType) ToPolicyBooleanPolicyPtrOutputWithContext(ctx context.Context) PolicyBooleanPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyBooleanPolicyPtrOutput)
}

type PolicyBooleanPolicyOutput struct{ *pulumi.OutputState }

func (PolicyBooleanPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyBooleanPolicy)(nil)).Elem()
}

func (o PolicyBooleanPolicyOutput) ToPolicyBooleanPolicyOutput() PolicyBooleanPolicyOutput {
	return o
}

func (o PolicyBooleanPolicyOutput) ToPolicyBooleanPolicyOutputWithContext(ctx context.Context) PolicyBooleanPolicyOutput {
	return o
}

func (o PolicyBooleanPolicyOutput) ToPolicyBooleanPolicyPtrOutput() PolicyBooleanPolicyPtrOutput {
	return o.ToPolicyBooleanPolicyPtrOutputWithContext(context.Background())
}

func (o PolicyBooleanPolicyOutput) ToPolicyBooleanPolicyPtrOutputWithContext(ctx context.Context) PolicyBooleanPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PolicyBooleanPolicy) *PolicyBooleanPolicy {
		return &v
	}).(PolicyBooleanPolicyPtrOutput)
}

// If true, then the Policy is enforced. If false, then any configuration is acceptable.
func (o PolicyBooleanPolicyOutput) Enforced() pulumi.BoolOutput {
	return o.ApplyT(func(v PolicyBooleanPolicy) bool { return v.Enforced }).(pulumi.BoolOutput)
}

type PolicyBooleanPolicyPtrOutput struct{ *pulumi.OutputState }

func (PolicyBooleanPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyBooleanPolicy)(nil)).Elem()
}

func (o PolicyBooleanPolicyPtrOutput) ToPolicyBooleanPolicyPtrOutput() PolicyBooleanPolicyPtrOutput {
	return o
}

func (o PolicyBooleanPolicyPtrOutput) ToPolicyBooleanPolicyPtrOutputWithContext(ctx context.Context) PolicyBooleanPolicyPtrOutput {
	return o
}

func (o PolicyBooleanPolicyPtrOutput) Elem() PolicyBooleanPolicyOutput {
	return o.ApplyT(func(v *PolicyBooleanPolicy) PolicyBooleanPolicy {
		if v != nil {
			return *v
		}
		var ret PolicyBooleanPolicy
		return ret
	}).(PolicyBooleanPolicyOutput)
}

// If true, then the Policy is enforced. If false, then any configuration is acceptable.
func (o PolicyBooleanPolicyPtrOutput) Enforced() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PolicyBooleanPolicy) *bool {
		if v == nil {
			return nil
		}
		return &v.Enforced
	}).(pulumi.BoolPtrOutput)
}

type PolicyListPolicy struct {
	// or `deny` - (Optional) One or the other must be set.
	Allow *PolicyListPolicyAllow `pulumi:"allow"`
	Deny  *PolicyListPolicyDeny  `pulumi:"deny"`
	// If set to true, the values from the effective Policy of the parent resource
	// are inherited, meaning the values set in this Policy are added to the values inherited up the hierarchy.
	//
	// The `allow` or `deny` blocks support:
	InheritFromParent *bool `pulumi:"inheritFromParent"`
	// The Google Cloud Console will try to default to a configuration that matches the value specified in this field.
	SuggestedValue *string `pulumi:"suggestedValue"`
}

// PolicyListPolicyInput is an input type that accepts PolicyListPolicyArgs and PolicyListPolicyOutput values.
// You can construct a concrete instance of `PolicyListPolicyInput` via:
//
//	PolicyListPolicyArgs{...}
type PolicyListPolicyInput interface {
	pulumi.Input

	ToPolicyListPolicyOutput() PolicyListPolicyOutput
	ToPolicyListPolicyOutputWithContext(context.Context) PolicyListPolicyOutput
}

type PolicyListPolicyArgs struct {
	// or `deny` - (Optional) One or the other must be set.
	Allow PolicyListPolicyAllowPtrInput `pulumi:"allow"`
	Deny  PolicyListPolicyDenyPtrInput  `pulumi:"deny"`
	// If set to true, the values from the effective Policy of the parent resource
	// are inherited, meaning the values set in this Policy are added to the values inherited up the hierarchy.
	//
	// The `allow` or `deny` blocks support:
	InheritFromParent pulumi.BoolPtrInput `pulumi:"inheritFromParent"`
	// The Google Cloud Console will try to default to a configuration that matches the value specified in this field.
	SuggestedValue pulumi.StringPtrInput `pulumi:"suggestedValue"`
}

func (PolicyListPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyListPolicy)(nil)).Elem()
}

func (i PolicyListPolicyArgs) ToPolicyListPolicyOutput() PolicyListPolicyOutput {
	return i.ToPolicyListPolicyOutputWithContext(context.Background())
}

func (i PolicyListPolicyArgs) ToPolicyListPolicyOutputWithContext(ctx context.Context) PolicyListPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyListPolicyOutput)
}

func (i PolicyListPolicyArgs) ToPolicyListPolicyPtrOutput() PolicyListPolicyPtrOutput {
	return i.ToPolicyListPolicyPtrOutputWithContext(context.Background())
}

func (i PolicyListPolicyArgs) ToPolicyListPolicyPtrOutputWithContext(ctx context.Context) PolicyListPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyListPolicyOutput).ToPolicyListPolicyPtrOutputWithContext(ctx)
}

// PolicyListPolicyPtrInput is an input type that accepts PolicyListPolicyArgs, PolicyListPolicyPtr and PolicyListPolicyPtrOutput values.
// You can construct a concrete instance of `PolicyListPolicyPtrInput` via:
//
//	        PolicyListPolicyArgs{...}
//
//	or:
//
//	        nil
type PolicyListPolicyPtrInput interface {
	pulumi.Input

	ToPolicyListPolicyPtrOutput() PolicyListPolicyPtrOutput
	ToPolicyListPolicyPtrOutputWithContext(context.Context) PolicyListPolicyPtrOutput
}

type policyListPolicyPtrType PolicyListPolicyArgs

func PolicyListPolicyPtr(v *PolicyListPolicyArgs) PolicyListPolicyPtrInput {
	return (*policyListPolicyPtrType)(v)
}

func (*policyListPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyListPolicy)(nil)).Elem()
}

func (i *policyListPolicyPtrType) ToPolicyListPolicyPtrOutput() PolicyListPolicyPtrOutput {
	return i.ToPolicyListPolicyPtrOutputWithContext(context.Background())
}

func (i *policyListPolicyPtrType) ToPolicyListPolicyPtrOutputWithContext(ctx context.Context) PolicyListPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyListPolicyPtrOutput)
}

type PolicyListPolicyOutput struct{ *pulumi.OutputState }

func (PolicyListPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyListPolicy)(nil)).Elem()
}

func (o PolicyListPolicyOutput) ToPolicyListPolicyOutput() PolicyListPolicyOutput {
	return o
}

func (o PolicyListPolicyOutput) ToPolicyListPolicyOutputWithContext(ctx context.Context) PolicyListPolicyOutput {
	return o
}

func (o PolicyListPolicyOutput) ToPolicyListPolicyPtrOutput() PolicyListPolicyPtrOutput {
	return o.ToPolicyListPolicyPtrOutputWithContext(context.Background())
}

func (o PolicyListPolicyOutput) ToPolicyListPolicyPtrOutputWithContext(ctx context.Context) PolicyListPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PolicyListPolicy) *PolicyListPolicy {
		return &v
	}).(PolicyListPolicyPtrOutput)
}

// or `deny` - (Optional) One or the other must be set.
func (o PolicyListPolicyOutput) Allow() PolicyListPolicyAllowPtrOutput {
	return o.ApplyT(func(v PolicyListPolicy) *PolicyListPolicyAllow { return v.Allow }).(PolicyListPolicyAllowPtrOutput)
}

func (o PolicyListPolicyOutput) Deny() PolicyListPolicyDenyPtrOutput {
	return o.ApplyT(func(v PolicyListPolicy) *PolicyListPolicyDeny { return v.Deny }).(PolicyListPolicyDenyPtrOutput)
}

// If set to true, the values from the effective Policy of the parent resource
// are inherited, meaning the values set in this Policy are added to the values inherited up the hierarchy.
//
// The `allow` or `deny` blocks support:
func (o PolicyListPolicyOutput) InheritFromParent() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PolicyListPolicy) *bool { return v.InheritFromParent }).(pulumi.BoolPtrOutput)
}

// The Google Cloud Console will try to default to a configuration that matches the value specified in this field.
func (o PolicyListPolicyOutput) SuggestedValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyListPolicy) *string { return v.SuggestedValue }).(pulumi.StringPtrOutput)
}

type PolicyListPolicyPtrOutput struct{ *pulumi.OutputState }

func (PolicyListPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyListPolicy)(nil)).Elem()
}

func (o PolicyListPolicyPtrOutput) ToPolicyListPolicyPtrOutput() PolicyListPolicyPtrOutput {
	return o
}

func (o PolicyListPolicyPtrOutput) ToPolicyListPolicyPtrOutputWithContext(ctx context.Context) PolicyListPolicyPtrOutput {
	return o
}

func (o PolicyListPolicyPtrOutput) Elem() PolicyListPolicyOutput {
	return o.ApplyT(func(v *PolicyListPolicy) PolicyListPolicy {
		if v != nil {
			return *v
		}
		var ret PolicyListPolicy
		return ret
	}).(PolicyListPolicyOutput)
}

// or `deny` - (Optional) One or the other must be set.
func (o PolicyListPolicyPtrOutput) Allow() PolicyListPolicyAllowPtrOutput {
	return o.ApplyT(func(v *PolicyListPolicy) *PolicyListPolicyAllow {
		if v == nil {
			return nil
		}
		return v.Allow
	}).(PolicyListPolicyAllowPtrOutput)
}

func (o PolicyListPolicyPtrOutput) Deny() PolicyListPolicyDenyPtrOutput {
	return o.ApplyT(func(v *PolicyListPolicy) *PolicyListPolicyDeny {
		if v == nil {
			return nil
		}
		return v.Deny
	}).(PolicyListPolicyDenyPtrOutput)
}

// If set to true, the values from the effective Policy of the parent resource
// are inherited, meaning the values set in this Policy are added to the values inherited up the hierarchy.
//
// The `allow` or `deny` blocks support:
func (o PolicyListPolicyPtrOutput) InheritFromParent() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PolicyListPolicy) *bool {
		if v == nil {
			return nil
		}
		return v.InheritFromParent
	}).(pulumi.BoolPtrOutput)
}

// The Google Cloud Console will try to default to a configuration that matches the value specified in this field.
func (o PolicyListPolicyPtrOutput) SuggestedValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyListPolicy) *string {
		if v == nil {
			return nil
		}
		return v.SuggestedValue
	}).(pulumi.StringPtrOutput)
}

type PolicyListPolicyAllow struct {
	// The policy allows or denies all values.
	All *bool `pulumi:"all"`
	// The policy can define specific values that are allowed or denied.
	Values []string `pulumi:"values"`
}

// PolicyListPolicyAllowInput is an input type that accepts PolicyListPolicyAllowArgs and PolicyListPolicyAllowOutput values.
// You can construct a concrete instance of `PolicyListPolicyAllowInput` via:
//
//	PolicyListPolicyAllowArgs{...}
type PolicyListPolicyAllowInput interface {
	pulumi.Input

	ToPolicyListPolicyAllowOutput() PolicyListPolicyAllowOutput
	ToPolicyListPolicyAllowOutputWithContext(context.Context) PolicyListPolicyAllowOutput
}

type PolicyListPolicyAllowArgs struct {
	// The policy allows or denies all values.
	All pulumi.BoolPtrInput `pulumi:"all"`
	// The policy can define specific values that are allowed or denied.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (PolicyListPolicyAllowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyListPolicyAllow)(nil)).Elem()
}

func (i PolicyListPolicyAllowArgs) ToPolicyListPolicyAllowOutput() PolicyListPolicyAllowOutput {
	return i.ToPolicyListPolicyAllowOutputWithContext(context.Background())
}

func (i PolicyListPolicyAllowArgs) ToPolicyListPolicyAllowOutputWithContext(ctx context.Context) PolicyListPolicyAllowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyListPolicyAllowOutput)
}

func (i PolicyListPolicyAllowArgs) ToPolicyListPolicyAllowPtrOutput() PolicyListPolicyAllowPtrOutput {
	return i.ToPolicyListPolicyAllowPtrOutputWithContext(context.Background())
}

func (i PolicyListPolicyAllowArgs) ToPolicyListPolicyAllowPtrOutputWithContext(ctx context.Context) PolicyListPolicyAllowPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyListPolicyAllowOutput).ToPolicyListPolicyAllowPtrOutputWithContext(ctx)
}

// PolicyListPolicyAllowPtrInput is an input type that accepts PolicyListPolicyAllowArgs, PolicyListPolicyAllowPtr and PolicyListPolicyAllowPtrOutput values.
// You can construct a concrete instance of `PolicyListPolicyAllowPtrInput` via:
//
//	        PolicyListPolicyAllowArgs{...}
//
//	or:
//
//	        nil
type PolicyListPolicyAllowPtrInput interface {
	pulumi.Input

	ToPolicyListPolicyAllowPtrOutput() PolicyListPolicyAllowPtrOutput
	ToPolicyListPolicyAllowPtrOutputWithContext(context.Context) PolicyListPolicyAllowPtrOutput
}

type policyListPolicyAllowPtrType PolicyListPolicyAllowArgs

func PolicyListPolicyAllowPtr(v *PolicyListPolicyAllowArgs) PolicyListPolicyAllowPtrInput {
	return (*policyListPolicyAllowPtrType)(v)
}

func (*policyListPolicyAllowPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyListPolicyAllow)(nil)).Elem()
}

func (i *policyListPolicyAllowPtrType) ToPolicyListPolicyAllowPtrOutput() PolicyListPolicyAllowPtrOutput {
	return i.ToPolicyListPolicyAllowPtrOutputWithContext(context.Background())
}

func (i *policyListPolicyAllowPtrType) ToPolicyListPolicyAllowPtrOutputWithContext(ctx context.Context) PolicyListPolicyAllowPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyListPolicyAllowPtrOutput)
}

type PolicyListPolicyAllowOutput struct{ *pulumi.OutputState }

func (PolicyListPolicyAllowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyListPolicyAllow)(nil)).Elem()
}

func (o PolicyListPolicyAllowOutput) ToPolicyListPolicyAllowOutput() PolicyListPolicyAllowOutput {
	return o
}

func (o PolicyListPolicyAllowOutput) ToPolicyListPolicyAllowOutputWithContext(ctx context.Context) PolicyListPolicyAllowOutput {
	return o
}

func (o PolicyListPolicyAllowOutput) ToPolicyListPolicyAllowPtrOutput() PolicyListPolicyAllowPtrOutput {
	return o.ToPolicyListPolicyAllowPtrOutputWithContext(context.Background())
}

func (o PolicyListPolicyAllowOutput) ToPolicyListPolicyAllowPtrOutputWithContext(ctx context.Context) PolicyListPolicyAllowPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PolicyListPolicyAllow) *PolicyListPolicyAllow {
		return &v
	}).(PolicyListPolicyAllowPtrOutput)
}

// The policy allows or denies all values.
func (o PolicyListPolicyAllowOutput) All() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PolicyListPolicyAllow) *bool { return v.All }).(pulumi.BoolPtrOutput)
}

// The policy can define specific values that are allowed or denied.
func (o PolicyListPolicyAllowOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PolicyListPolicyAllow) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type PolicyListPolicyAllowPtrOutput struct{ *pulumi.OutputState }

func (PolicyListPolicyAllowPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyListPolicyAllow)(nil)).Elem()
}

func (o PolicyListPolicyAllowPtrOutput) ToPolicyListPolicyAllowPtrOutput() PolicyListPolicyAllowPtrOutput {
	return o
}

func (o PolicyListPolicyAllowPtrOutput) ToPolicyListPolicyAllowPtrOutputWithContext(ctx context.Context) PolicyListPolicyAllowPtrOutput {
	return o
}

func (o PolicyListPolicyAllowPtrOutput) Elem() PolicyListPolicyAllowOutput {
	return o.ApplyT(func(v *PolicyListPolicyAllow) PolicyListPolicyAllow {
		if v != nil {
			return *v
		}
		var ret PolicyListPolicyAllow
		return ret
	}).(PolicyListPolicyAllowOutput)
}

// The policy allows or denies all values.
func (o PolicyListPolicyAllowPtrOutput) All() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PolicyListPolicyAllow) *bool {
		if v == nil {
			return nil
		}
		return v.All
	}).(pulumi.BoolPtrOutput)
}

// The policy can define specific values that are allowed or denied.
func (o PolicyListPolicyAllowPtrOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PolicyListPolicyAllow) []string {
		if v == nil {
			return nil
		}
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type PolicyListPolicyDeny struct {
	// The policy allows or denies all values.
	All *bool `pulumi:"all"`
	// The policy can define specific values that are allowed or denied.
	Values []string `pulumi:"values"`
}

// PolicyListPolicyDenyInput is an input type that accepts PolicyListPolicyDenyArgs and PolicyListPolicyDenyOutput values.
// You can construct a concrete instance of `PolicyListPolicyDenyInput` via:
//
//	PolicyListPolicyDenyArgs{...}
type PolicyListPolicyDenyInput interface {
	pulumi.Input

	ToPolicyListPolicyDenyOutput() PolicyListPolicyDenyOutput
	ToPolicyListPolicyDenyOutputWithContext(context.Context) PolicyListPolicyDenyOutput
}

type PolicyListPolicyDenyArgs struct {
	// The policy allows or denies all values.
	All pulumi.BoolPtrInput `pulumi:"all"`
	// The policy can define specific values that are allowed or denied.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (PolicyListPolicyDenyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyListPolicyDeny)(nil)).Elem()
}

func (i PolicyListPolicyDenyArgs) ToPolicyListPolicyDenyOutput() PolicyListPolicyDenyOutput {
	return i.ToPolicyListPolicyDenyOutputWithContext(context.Background())
}

func (i PolicyListPolicyDenyArgs) ToPolicyListPolicyDenyOutputWithContext(ctx context.Context) PolicyListPolicyDenyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyListPolicyDenyOutput)
}

func (i PolicyListPolicyDenyArgs) ToPolicyListPolicyDenyPtrOutput() PolicyListPolicyDenyPtrOutput {
	return i.ToPolicyListPolicyDenyPtrOutputWithContext(context.Background())
}

func (i PolicyListPolicyDenyArgs) ToPolicyListPolicyDenyPtrOutputWithContext(ctx context.Context) PolicyListPolicyDenyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyListPolicyDenyOutput).ToPolicyListPolicyDenyPtrOutputWithContext(ctx)
}

// PolicyListPolicyDenyPtrInput is an input type that accepts PolicyListPolicyDenyArgs, PolicyListPolicyDenyPtr and PolicyListPolicyDenyPtrOutput values.
// You can construct a concrete instance of `PolicyListPolicyDenyPtrInput` via:
//
//	        PolicyListPolicyDenyArgs{...}
//
//	or:
//
//	        nil
type PolicyListPolicyDenyPtrInput interface {
	pulumi.Input

	ToPolicyListPolicyDenyPtrOutput() PolicyListPolicyDenyPtrOutput
	ToPolicyListPolicyDenyPtrOutputWithContext(context.Context) PolicyListPolicyDenyPtrOutput
}

type policyListPolicyDenyPtrType PolicyListPolicyDenyArgs

func PolicyListPolicyDenyPtr(v *PolicyListPolicyDenyArgs) PolicyListPolicyDenyPtrInput {
	return (*policyListPolicyDenyPtrType)(v)
}

func (*policyListPolicyDenyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyListPolicyDeny)(nil)).Elem()
}

func (i *policyListPolicyDenyPtrType) ToPolicyListPolicyDenyPtrOutput() PolicyListPolicyDenyPtrOutput {
	return i.ToPolicyListPolicyDenyPtrOutputWithContext(context.Background())
}

func (i *policyListPolicyDenyPtrType) ToPolicyListPolicyDenyPtrOutputWithContext(ctx context.Context) PolicyListPolicyDenyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyListPolicyDenyPtrOutput)
}

type PolicyListPolicyDenyOutput struct{ *pulumi.OutputState }

func (PolicyListPolicyDenyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyListPolicyDeny)(nil)).Elem()
}

func (o PolicyListPolicyDenyOutput) ToPolicyListPolicyDenyOutput() PolicyListPolicyDenyOutput {
	return o
}

func (o PolicyListPolicyDenyOutput) ToPolicyListPolicyDenyOutputWithContext(ctx context.Context) PolicyListPolicyDenyOutput {
	return o
}

func (o PolicyListPolicyDenyOutput) ToPolicyListPolicyDenyPtrOutput() PolicyListPolicyDenyPtrOutput {
	return o.ToPolicyListPolicyDenyPtrOutputWithContext(context.Background())
}

func (o PolicyListPolicyDenyOutput) ToPolicyListPolicyDenyPtrOutputWithContext(ctx context.Context) PolicyListPolicyDenyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PolicyListPolicyDeny) *PolicyListPolicyDeny {
		return &v
	}).(PolicyListPolicyDenyPtrOutput)
}

// The policy allows or denies all values.
func (o PolicyListPolicyDenyOutput) All() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PolicyListPolicyDeny) *bool { return v.All }).(pulumi.BoolPtrOutput)
}

// The policy can define specific values that are allowed or denied.
func (o PolicyListPolicyDenyOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PolicyListPolicyDeny) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type PolicyListPolicyDenyPtrOutput struct{ *pulumi.OutputState }

func (PolicyListPolicyDenyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyListPolicyDeny)(nil)).Elem()
}

func (o PolicyListPolicyDenyPtrOutput) ToPolicyListPolicyDenyPtrOutput() PolicyListPolicyDenyPtrOutput {
	return o
}

func (o PolicyListPolicyDenyPtrOutput) ToPolicyListPolicyDenyPtrOutputWithContext(ctx context.Context) PolicyListPolicyDenyPtrOutput {
	return o
}

func (o PolicyListPolicyDenyPtrOutput) Elem() PolicyListPolicyDenyOutput {
	return o.ApplyT(func(v *PolicyListPolicyDeny) PolicyListPolicyDeny {
		if v != nil {
			return *v
		}
		var ret PolicyListPolicyDeny
		return ret
	}).(PolicyListPolicyDenyOutput)
}

// The policy allows or denies all values.
func (o PolicyListPolicyDenyPtrOutput) All() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PolicyListPolicyDeny) *bool {
		if v == nil {
			return nil
		}
		return v.All
	}).(pulumi.BoolPtrOutput)
}

// The policy can define specific values that are allowed or denied.
func (o PolicyListPolicyDenyPtrOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PolicyListPolicyDeny) []string {
		if v == nil {
			return nil
		}
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type PolicyRestorePolicy struct {
	// May only be set to true. If set, then the default Policy is restored.
	Default bool `pulumi:"default"`
}

// PolicyRestorePolicyInput is an input type that accepts PolicyRestorePolicyArgs and PolicyRestorePolicyOutput values.
// You can construct a concrete instance of `PolicyRestorePolicyInput` via:
//
//	PolicyRestorePolicyArgs{...}
type PolicyRestorePolicyInput interface {
	pulumi.Input

	ToPolicyRestorePolicyOutput() PolicyRestorePolicyOutput
	ToPolicyRestorePolicyOutputWithContext(context.Context) PolicyRestorePolicyOutput
}

type PolicyRestorePolicyArgs struct {
	// May only be set to true. If set, then the default Policy is restored.
	Default pulumi.BoolInput `pulumi:"default"`
}

func (PolicyRestorePolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyRestorePolicy)(nil)).Elem()
}

func (i PolicyRestorePolicyArgs) ToPolicyRestorePolicyOutput() PolicyRestorePolicyOutput {
	return i.ToPolicyRestorePolicyOutputWithContext(context.Background())
}

func (i PolicyRestorePolicyArgs) ToPolicyRestorePolicyOutputWithContext(ctx context.Context) PolicyRestorePolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyRestorePolicyOutput)
}

func (i PolicyRestorePolicyArgs) ToPolicyRestorePolicyPtrOutput() PolicyRestorePolicyPtrOutput {
	return i.ToPolicyRestorePolicyPtrOutputWithContext(context.Background())
}

func (i PolicyRestorePolicyArgs) ToPolicyRestorePolicyPtrOutputWithContext(ctx context.Context) PolicyRestorePolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyRestorePolicyOutput).ToPolicyRestorePolicyPtrOutputWithContext(ctx)
}

// PolicyRestorePolicyPtrInput is an input type that accepts PolicyRestorePolicyArgs, PolicyRestorePolicyPtr and PolicyRestorePolicyPtrOutput values.
// You can construct a concrete instance of `PolicyRestorePolicyPtrInput` via:
//
//	        PolicyRestorePolicyArgs{...}
//
//	or:
//
//	        nil
type PolicyRestorePolicyPtrInput interface {
	pulumi.Input

	ToPolicyRestorePolicyPtrOutput() PolicyRestorePolicyPtrOutput
	ToPolicyRestorePolicyPtrOutputWithContext(context.Context) PolicyRestorePolicyPtrOutput
}

type policyRestorePolicyPtrType PolicyRestorePolicyArgs

func PolicyRestorePolicyPtr(v *PolicyRestorePolicyArgs) PolicyRestorePolicyPtrInput {
	return (*policyRestorePolicyPtrType)(v)
}

func (*policyRestorePolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyRestorePolicy)(nil)).Elem()
}

func (i *policyRestorePolicyPtrType) ToPolicyRestorePolicyPtrOutput() PolicyRestorePolicyPtrOutput {
	return i.ToPolicyRestorePolicyPtrOutputWithContext(context.Background())
}

func (i *policyRestorePolicyPtrType) ToPolicyRestorePolicyPtrOutputWithContext(ctx context.Context) PolicyRestorePolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyRestorePolicyPtrOutput)
}

type PolicyRestorePolicyOutput struct{ *pulumi.OutputState }

func (PolicyRestorePolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyRestorePolicy)(nil)).Elem()
}

func (o PolicyRestorePolicyOutput) ToPolicyRestorePolicyOutput() PolicyRestorePolicyOutput {
	return o
}

func (o PolicyRestorePolicyOutput) ToPolicyRestorePolicyOutputWithContext(ctx context.Context) PolicyRestorePolicyOutput {
	return o
}

func (o PolicyRestorePolicyOutput) ToPolicyRestorePolicyPtrOutput() PolicyRestorePolicyPtrOutput {
	return o.ToPolicyRestorePolicyPtrOutputWithContext(context.Background())
}

func (o PolicyRestorePolicyOutput) ToPolicyRestorePolicyPtrOutputWithContext(ctx context.Context) PolicyRestorePolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PolicyRestorePolicy) *PolicyRestorePolicy {
		return &v
	}).(PolicyRestorePolicyPtrOutput)
}

// May only be set to true. If set, then the default Policy is restored.
func (o PolicyRestorePolicyOutput) Default() pulumi.BoolOutput {
	return o.ApplyT(func(v PolicyRestorePolicy) bool { return v.Default }).(pulumi.BoolOutput)
}

type PolicyRestorePolicyPtrOutput struct{ *pulumi.OutputState }

func (PolicyRestorePolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyRestorePolicy)(nil)).Elem()
}

func (o PolicyRestorePolicyPtrOutput) ToPolicyRestorePolicyPtrOutput() PolicyRestorePolicyPtrOutput {
	return o
}

func (o PolicyRestorePolicyPtrOutput) ToPolicyRestorePolicyPtrOutputWithContext(ctx context.Context) PolicyRestorePolicyPtrOutput {
	return o
}

func (o PolicyRestorePolicyPtrOutput) Elem() PolicyRestorePolicyOutput {
	return o.ApplyT(func(v *PolicyRestorePolicy) PolicyRestorePolicy {
		if v != nil {
			return *v
		}
		var ret PolicyRestorePolicy
		return ret
	}).(PolicyRestorePolicyOutput)
}

// May only be set to true. If set, then the default Policy is restored.
func (o PolicyRestorePolicyPtrOutput) Default() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PolicyRestorePolicy) *bool {
		if v == nil {
			return nil
		}
		return &v.Default
	}).(pulumi.BoolPtrOutput)
}

type GetFoldersFolder struct {
	// The timestamp of when the folder was created
	CreateTime string `pulumi:"createTime"`
	// The timestamp of when the folder was requested to be deleted (if applicable)
	DeleteTime string `pulumi:"deleteTime"`
	// The display name of the folder
	DisplayName string `pulumi:"displayName"`
	// Entity tag identifier of the folder
	Etag string `pulumi:"etag"`
	// The id of the folder
	Name string `pulumi:"name"`
	// The parent id of the folder
	Parent string `pulumi:"parent"`
	// The lifecycle state of the folder
	State string `pulumi:"state"`
	// The timestamp of when the folder was last modified
	UpdateTime string `pulumi:"updateTime"`
}

// GetFoldersFolderInput is an input type that accepts GetFoldersFolderArgs and GetFoldersFolderOutput values.
// You can construct a concrete instance of `GetFoldersFolderInput` via:
//
//	GetFoldersFolderArgs{...}
type GetFoldersFolderInput interface {
	pulumi.Input

	ToGetFoldersFolderOutput() GetFoldersFolderOutput
	ToGetFoldersFolderOutputWithContext(context.Context) GetFoldersFolderOutput
}

type GetFoldersFolderArgs struct {
	// The timestamp of when the folder was created
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// The timestamp of when the folder was requested to be deleted (if applicable)
	DeleteTime pulumi.StringInput `pulumi:"deleteTime"`
	// The display name of the folder
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// Entity tag identifier of the folder
	Etag pulumi.StringInput `pulumi:"etag"`
	// The id of the folder
	Name pulumi.StringInput `pulumi:"name"`
	// The parent id of the folder
	Parent pulumi.StringInput `pulumi:"parent"`
	// The lifecycle state of the folder
	State pulumi.StringInput `pulumi:"state"`
	// The timestamp of when the folder was last modified
	UpdateTime pulumi.StringInput `pulumi:"updateTime"`
}

func (GetFoldersFolderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFoldersFolder)(nil)).Elem()
}

func (i GetFoldersFolderArgs) ToGetFoldersFolderOutput() GetFoldersFolderOutput {
	return i.ToGetFoldersFolderOutputWithContext(context.Background())
}

func (i GetFoldersFolderArgs) ToGetFoldersFolderOutputWithContext(ctx context.Context) GetFoldersFolderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFoldersFolderOutput)
}

// GetFoldersFolderArrayInput is an input type that accepts GetFoldersFolderArray and GetFoldersFolderArrayOutput values.
// You can construct a concrete instance of `GetFoldersFolderArrayInput` via:
//
//	GetFoldersFolderArray{ GetFoldersFolderArgs{...} }
type GetFoldersFolderArrayInput interface {
	pulumi.Input

	ToGetFoldersFolderArrayOutput() GetFoldersFolderArrayOutput
	ToGetFoldersFolderArrayOutputWithContext(context.Context) GetFoldersFolderArrayOutput
}

type GetFoldersFolderArray []GetFoldersFolderInput

func (GetFoldersFolderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFoldersFolder)(nil)).Elem()
}

func (i GetFoldersFolderArray) ToGetFoldersFolderArrayOutput() GetFoldersFolderArrayOutput {
	return i.ToGetFoldersFolderArrayOutputWithContext(context.Background())
}

func (i GetFoldersFolderArray) ToGetFoldersFolderArrayOutputWithContext(ctx context.Context) GetFoldersFolderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFoldersFolderArrayOutput)
}

type GetFoldersFolderOutput struct{ *pulumi.OutputState }

func (GetFoldersFolderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFoldersFolder)(nil)).Elem()
}

func (o GetFoldersFolderOutput) ToGetFoldersFolderOutput() GetFoldersFolderOutput {
	return o
}

func (o GetFoldersFolderOutput) ToGetFoldersFolderOutputWithContext(ctx context.Context) GetFoldersFolderOutput {
	return o
}

// The timestamp of when the folder was created
func (o GetFoldersFolderOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetFoldersFolder) string { return v.CreateTime }).(pulumi.StringOutput)
}

// The timestamp of when the folder was requested to be deleted (if applicable)
func (o GetFoldersFolderOutput) DeleteTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetFoldersFolder) string { return v.DeleteTime }).(pulumi.StringOutput)
}

// The display name of the folder
func (o GetFoldersFolderOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetFoldersFolder) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Entity tag identifier of the folder
func (o GetFoldersFolderOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v GetFoldersFolder) string { return v.Etag }).(pulumi.StringOutput)
}

// The id of the folder
func (o GetFoldersFolderOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFoldersFolder) string { return v.Name }).(pulumi.StringOutput)
}

// The parent id of the folder
func (o GetFoldersFolderOutput) Parent() pulumi.StringOutput {
	return o.ApplyT(func(v GetFoldersFolder) string { return v.Parent }).(pulumi.StringOutput)
}

// The lifecycle state of the folder
func (o GetFoldersFolderOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetFoldersFolder) string { return v.State }).(pulumi.StringOutput)
}

// The timestamp of when the folder was last modified
func (o GetFoldersFolderOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetFoldersFolder) string { return v.UpdateTime }).(pulumi.StringOutput)
}

type GetFoldersFolderArrayOutput struct{ *pulumi.OutputState }

func (GetFoldersFolderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFoldersFolder)(nil)).Elem()
}

func (o GetFoldersFolderArrayOutput) ToGetFoldersFolderArrayOutput() GetFoldersFolderArrayOutput {
	return o
}

func (o GetFoldersFolderArrayOutput) ToGetFoldersFolderArrayOutputWithContext(ctx context.Context) GetFoldersFolderArrayOutput {
	return o
}

func (o GetFoldersFolderArrayOutput) Index(i pulumi.IntInput) GetFoldersFolderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFoldersFolder {
		return vs[0].([]GetFoldersFolder)[vs[1].(int)]
	}).(GetFoldersFolderOutput)
}

type GetIamPolicyAuditConfig struct {
	// A nested block that defines the operations you'd like to log.
	AuditLogConfigs []GetIamPolicyAuditConfigAuditLogConfig `pulumi:"auditLogConfigs"`
	// Defines a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services.
	Service string `pulumi:"service"`
}

// GetIamPolicyAuditConfigInput is an input type that accepts GetIamPolicyAuditConfigArgs and GetIamPolicyAuditConfigOutput values.
// You can construct a concrete instance of `GetIamPolicyAuditConfigInput` via:
//
//	GetIamPolicyAuditConfigArgs{...}
type GetIamPolicyAuditConfigInput interface {
	pulumi.Input

	ToGetIamPolicyAuditConfigOutput() GetIamPolicyAuditConfigOutput
	ToGetIamPolicyAuditConfigOutputWithContext(context.Context) GetIamPolicyAuditConfigOutput
}

type GetIamPolicyAuditConfigArgs struct {
	// A nested block that defines the operations you'd like to log.
	AuditLogConfigs GetIamPolicyAuditConfigAuditLogConfigArrayInput `pulumi:"auditLogConfigs"`
	// Defines a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services.
	Service pulumi.StringInput `pulumi:"service"`
}

func (GetIamPolicyAuditConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIamPolicyAuditConfig)(nil)).Elem()
}

func (i GetIamPolicyAuditConfigArgs) ToGetIamPolicyAuditConfigOutput() GetIamPolicyAuditConfigOutput {
	return i.ToGetIamPolicyAuditConfigOutputWithContext(context.Background())
}

func (i GetIamPolicyAuditConfigArgs) ToGetIamPolicyAuditConfigOutputWithContext(ctx context.Context) GetIamPolicyAuditConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIamPolicyAuditConfigOutput)
}

// GetIamPolicyAuditConfigArrayInput is an input type that accepts GetIamPolicyAuditConfigArray and GetIamPolicyAuditConfigArrayOutput values.
// You can construct a concrete instance of `GetIamPolicyAuditConfigArrayInput` via:
//
//	GetIamPolicyAuditConfigArray{ GetIamPolicyAuditConfigArgs{...} }
type GetIamPolicyAuditConfigArrayInput interface {
	pulumi.Input

	ToGetIamPolicyAuditConfigArrayOutput() GetIamPolicyAuditConfigArrayOutput
	ToGetIamPolicyAuditConfigArrayOutputWithContext(context.Context) GetIamPolicyAuditConfigArrayOutput
}

type GetIamPolicyAuditConfigArray []GetIamPolicyAuditConfigInput

func (GetIamPolicyAuditConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetIamPolicyAuditConfig)(nil)).Elem()
}

func (i GetIamPolicyAuditConfigArray) ToGetIamPolicyAuditConfigArrayOutput() GetIamPolicyAuditConfigArrayOutput {
	return i.ToGetIamPolicyAuditConfigArrayOutputWithContext(context.Background())
}

func (i GetIamPolicyAuditConfigArray) ToGetIamPolicyAuditConfigArrayOutputWithContext(ctx context.Context) GetIamPolicyAuditConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIamPolicyAuditConfigArrayOutput)
}

type GetIamPolicyAuditConfigOutput struct{ *pulumi.OutputState }

func (GetIamPolicyAuditConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIamPolicyAuditConfig)(nil)).Elem()
}

func (o GetIamPolicyAuditConfigOutput) ToGetIamPolicyAuditConfigOutput() GetIamPolicyAuditConfigOutput {
	return o
}

func (o GetIamPolicyAuditConfigOutput) ToGetIamPolicyAuditConfigOutputWithContext(ctx context.Context) GetIamPolicyAuditConfigOutput {
	return o
}

// A nested block that defines the operations you'd like to log.
func (o GetIamPolicyAuditConfigOutput) AuditLogConfigs() GetIamPolicyAuditConfigAuditLogConfigArrayOutput {
	return o.ApplyT(func(v GetIamPolicyAuditConfig) []GetIamPolicyAuditConfigAuditLogConfig { return v.AuditLogConfigs }).(GetIamPolicyAuditConfigAuditLogConfigArrayOutput)
}

// Defines a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services.
func (o GetIamPolicyAuditConfigOutput) Service() pulumi.StringOutput {
	return o.ApplyT(func(v GetIamPolicyAuditConfig) string { return v.Service }).(pulumi.StringOutput)
}

type GetIamPolicyAuditConfigArrayOutput struct{ *pulumi.OutputState }

func (GetIamPolicyAuditConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetIamPolicyAuditConfig)(nil)).Elem()
}

func (o GetIamPolicyAuditConfigArrayOutput) ToGetIamPolicyAuditConfigArrayOutput() GetIamPolicyAuditConfigArrayOutput {
	return o
}

func (o GetIamPolicyAuditConfigArrayOutput) ToGetIamPolicyAuditConfigArrayOutputWithContext(ctx context.Context) GetIamPolicyAuditConfigArrayOutput {
	return o
}

func (o GetIamPolicyAuditConfigArrayOutput) Index(i pulumi.IntInput) GetIamPolicyAuditConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetIamPolicyAuditConfig {
		return vs[0].([]GetIamPolicyAuditConfig)[vs[1].(int)]
	}).(GetIamPolicyAuditConfigOutput)
}

type GetIamPolicyAuditConfigAuditLogConfig struct {
	// Specifies the identities that are exempt from these types of logging operations. Follows the same format of the `members` array for `binding`.
	ExemptedMembers []string `pulumi:"exemptedMembers"`
	// Defines the logging level. `DATA_READ`, `DATA_WRITE` and `ADMIN_READ` capture different types of events. See [the audit configuration documentation](https://cloud.google.com/resource-manager/reference/rest/Shared.Types/AuditConfig) for more details.
	LogType string `pulumi:"logType"`
}

// GetIamPolicyAuditConfigAuditLogConfigInput is an input type that accepts GetIamPolicyAuditConfigAuditLogConfigArgs and GetIamPolicyAuditConfigAuditLogConfigOutput values.
// You can construct a concrete instance of `GetIamPolicyAuditConfigAuditLogConfigInput` via:
//
//	GetIamPolicyAuditConfigAuditLogConfigArgs{...}
type GetIamPolicyAuditConfigAuditLogConfigInput interface {
	pulumi.Input

	ToGetIamPolicyAuditConfigAuditLogConfigOutput() GetIamPolicyAuditConfigAuditLogConfigOutput
	ToGetIamPolicyAuditConfigAuditLogConfigOutputWithContext(context.Context) GetIamPolicyAuditConfigAuditLogConfigOutput
}

type GetIamPolicyAuditConfigAuditLogConfigArgs struct {
	// Specifies the identities that are exempt from these types of logging operations. Follows the same format of the `members` array for `binding`.
	ExemptedMembers pulumi.StringArrayInput `pulumi:"exemptedMembers"`
	// Defines the logging level. `DATA_READ`, `DATA_WRITE` and `ADMIN_READ` capture different types of events. See [the audit configuration documentation](https://cloud.google.com/resource-manager/reference/rest/Shared.Types/AuditConfig) for more details.
	LogType pulumi.StringInput `pulumi:"logType"`
}

func (GetIamPolicyAuditConfigAuditLogConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIamPolicyAuditConfigAuditLogConfig)(nil)).Elem()
}

func (i GetIamPolicyAuditConfigAuditLogConfigArgs) ToGetIamPolicyAuditConfigAuditLogConfigOutput() GetIamPolicyAuditConfigAuditLogConfigOutput {
	return i.ToGetIamPolicyAuditConfigAuditLogConfigOutputWithContext(context.Background())
}

func (i GetIamPolicyAuditConfigAuditLogConfigArgs) ToGetIamPolicyAuditConfigAuditLogConfigOutputWithContext(ctx context.Context) GetIamPolicyAuditConfigAuditLogConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIamPolicyAuditConfigAuditLogConfigOutput)
}

// GetIamPolicyAuditConfigAuditLogConfigArrayInput is an input type that accepts GetIamPolicyAuditConfigAuditLogConfigArray and GetIamPolicyAuditConfigAuditLogConfigArrayOutput values.
// You can construct a concrete instance of `GetIamPolicyAuditConfigAuditLogConfigArrayInput` via:
//
//	GetIamPolicyAuditConfigAuditLogConfigArray{ GetIamPolicyAuditConfigAuditLogConfigArgs{...} }
type GetIamPolicyAuditConfigAuditLogConfigArrayInput interface {
	pulumi.Input

	ToGetIamPolicyAuditConfigAuditLogConfigArrayOutput() GetIamPolicyAuditConfigAuditLogConfigArrayOutput
	ToGetIamPolicyAuditConfigAuditLogConfigArrayOutputWithContext(context.Context) GetIamPolicyAuditConfigAuditLogConfigArrayOutput
}

type GetIamPolicyAuditConfigAuditLogConfigArray []GetIamPolicyAuditConfigAuditLogConfigInput

func (GetIamPolicyAuditConfigAuditLogConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetIamPolicyAuditConfigAuditLogConfig)(nil)).Elem()
}

func (i GetIamPolicyAuditConfigAuditLogConfigArray) ToGetIamPolicyAuditConfigAuditLogConfigArrayOutput() GetIamPolicyAuditConfigAuditLogConfigArrayOutput {
	return i.ToGetIamPolicyAuditConfigAuditLogConfigArrayOutputWithContext(context.Background())
}

func (i GetIamPolicyAuditConfigAuditLogConfigArray) ToGetIamPolicyAuditConfigAuditLogConfigArrayOutputWithContext(ctx context.Context) GetIamPolicyAuditConfigAuditLogConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIamPolicyAuditConfigAuditLogConfigArrayOutput)
}

type GetIamPolicyAuditConfigAuditLogConfigOutput struct{ *pulumi.OutputState }

func (GetIamPolicyAuditConfigAuditLogConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIamPolicyAuditConfigAuditLogConfig)(nil)).Elem()
}

func (o GetIamPolicyAuditConfigAuditLogConfigOutput) ToGetIamPolicyAuditConfigAuditLogConfigOutput() GetIamPolicyAuditConfigAuditLogConfigOutput {
	return o
}

func (o GetIamPolicyAuditConfigAuditLogConfigOutput) ToGetIamPolicyAuditConfigAuditLogConfigOutputWithContext(ctx context.Context) GetIamPolicyAuditConfigAuditLogConfigOutput {
	return o
}

// Specifies the identities that are exempt from these types of logging operations. Follows the same format of the `members` array for `binding`.
func (o GetIamPolicyAuditConfigAuditLogConfigOutput) ExemptedMembers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetIamPolicyAuditConfigAuditLogConfig) []string { return v.ExemptedMembers }).(pulumi.StringArrayOutput)
}

// Defines the logging level. `DATA_READ`, `DATA_WRITE` and `ADMIN_READ` capture different types of events. See [the audit configuration documentation](https://cloud.google.com/resource-manager/reference/rest/Shared.Types/AuditConfig) for more details.
func (o GetIamPolicyAuditConfigAuditLogConfigOutput) LogType() pulumi.StringOutput {
	return o.ApplyT(func(v GetIamPolicyAuditConfigAuditLogConfig) string { return v.LogType }).(pulumi.StringOutput)
}

type GetIamPolicyAuditConfigAuditLogConfigArrayOutput struct{ *pulumi.OutputState }

func (GetIamPolicyAuditConfigAuditLogConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetIamPolicyAuditConfigAuditLogConfig)(nil)).Elem()
}

func (o GetIamPolicyAuditConfigAuditLogConfigArrayOutput) ToGetIamPolicyAuditConfigAuditLogConfigArrayOutput() GetIamPolicyAuditConfigAuditLogConfigArrayOutput {
	return o
}

func (o GetIamPolicyAuditConfigAuditLogConfigArrayOutput) ToGetIamPolicyAuditConfigAuditLogConfigArrayOutputWithContext(ctx context.Context) GetIamPolicyAuditConfigAuditLogConfigArrayOutput {
	return o
}

func (o GetIamPolicyAuditConfigAuditLogConfigArrayOutput) Index(i pulumi.IntInput) GetIamPolicyAuditConfigAuditLogConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetIamPolicyAuditConfigAuditLogConfig {
		return vs[0].([]GetIamPolicyAuditConfigAuditLogConfig)[vs[1].(int)]
	}).(GetIamPolicyAuditConfigAuditLogConfigOutput)
}

type GetIamPolicyBinding struct {
	// An [IAM Condition](https://cloud.google.com/iam/docs/conditions-overview) for a given binding. Structure is documented below.
	Condition *GetIamPolicyBindingCondition `pulumi:"condition"`
	// An array of identities that will be granted the privilege in the `role`. For more details on format and restrictions see https://cloud.google.com/billing/reference/rest/v1/Policy#Binding
	// Each entry can have one of the following values:
	// * **allUsers**: A special identifier that represents anyone who is on the internet; with or without a Google account. Some resources **don't** support this identity.
	// * **allAuthenticatedUsers**: A special identifier that represents anyone who is authenticated with a Google account or a service account. Some resources **don't** support this identity.
	// * **user:{emailid}**: An email address that represents a specific Google account. For example, alice@gmail.com.
	// * **serviceAccount:{emailid}**: An email address that represents a service account. For example, my-other-app@appspot.gserviceaccount.com.
	// * **group:{emailid}**: An email address that represents a Google group. For example, admins@example.com.
	// * **domain:{domain}**: A G Suite domain (primary, instead of alias) name that represents all the users of that domain. For example, google.com or example.com.
	Members []string `pulumi:"members"`
	// The role/permission that will be granted to the members.
	// See the [IAM Roles](https://cloud.google.com/compute/docs/access/iam) documentation for a complete list of roles.
	// Note that custom roles must be of the format `[projects|organizations]/{parent-name}/roles/{role-name}`.
	Role string `pulumi:"role"`
}

// GetIamPolicyBindingInput is an input type that accepts GetIamPolicyBindingArgs and GetIamPolicyBindingOutput values.
// You can construct a concrete instance of `GetIamPolicyBindingInput` via:
//
//	GetIamPolicyBindingArgs{...}
type GetIamPolicyBindingInput interface {
	pulumi.Input

	ToGetIamPolicyBindingOutput() GetIamPolicyBindingOutput
	ToGetIamPolicyBindingOutputWithContext(context.Context) GetIamPolicyBindingOutput
}

type GetIamPolicyBindingArgs struct {
	// An [IAM Condition](https://cloud.google.com/iam/docs/conditions-overview) for a given binding. Structure is documented below.
	Condition GetIamPolicyBindingConditionPtrInput `pulumi:"condition"`
	// An array of identities that will be granted the privilege in the `role`. For more details on format and restrictions see https://cloud.google.com/billing/reference/rest/v1/Policy#Binding
	// Each entry can have one of the following values:
	// * **allUsers**: A special identifier that represents anyone who is on the internet; with or without a Google account. Some resources **don't** support this identity.
	// * **allAuthenticatedUsers**: A special identifier that represents anyone who is authenticated with a Google account or a service account. Some resources **don't** support this identity.
	// * **user:{emailid}**: An email address that represents a specific Google account. For example, alice@gmail.com.
	// * **serviceAccount:{emailid}**: An email address that represents a service account. For example, my-other-app@appspot.gserviceaccount.com.
	// * **group:{emailid}**: An email address that represents a Google group. For example, admins@example.com.
	// * **domain:{domain}**: A G Suite domain (primary, instead of alias) name that represents all the users of that domain. For example, google.com or example.com.
	Members pulumi.StringArrayInput `pulumi:"members"`
	// The role/permission that will be granted to the members.
	// See the [IAM Roles](https://cloud.google.com/compute/docs/access/iam) documentation for a complete list of roles.
	// Note that custom roles must be of the format `[projects|organizations]/{parent-name}/roles/{role-name}`.
	Role pulumi.StringInput `pulumi:"role"`
}

func (GetIamPolicyBindingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIamPolicyBinding)(nil)).Elem()
}

func (i GetIamPolicyBindingArgs) ToGetIamPolicyBindingOutput() GetIamPolicyBindingOutput {
	return i.ToGetIamPolicyBindingOutputWithContext(context.Background())
}

func (i GetIamPolicyBindingArgs) ToGetIamPolicyBindingOutputWithContext(ctx context.Context) GetIamPolicyBindingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIamPolicyBindingOutput)
}

// GetIamPolicyBindingArrayInput is an input type that accepts GetIamPolicyBindingArray and GetIamPolicyBindingArrayOutput values.
// You can construct a concrete instance of `GetIamPolicyBindingArrayInput` via:
//
//	GetIamPolicyBindingArray{ GetIamPolicyBindingArgs{...} }
type GetIamPolicyBindingArrayInput interface {
	pulumi.Input

	ToGetIamPolicyBindingArrayOutput() GetIamPolicyBindingArrayOutput
	ToGetIamPolicyBindingArrayOutputWithContext(context.Context) GetIamPolicyBindingArrayOutput
}

type GetIamPolicyBindingArray []GetIamPolicyBindingInput

func (GetIamPolicyBindingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetIamPolicyBinding)(nil)).Elem()
}

func (i GetIamPolicyBindingArray) ToGetIamPolicyBindingArrayOutput() GetIamPolicyBindingArrayOutput {
	return i.ToGetIamPolicyBindingArrayOutputWithContext(context.Background())
}

func (i GetIamPolicyBindingArray) ToGetIamPolicyBindingArrayOutputWithContext(ctx context.Context) GetIamPolicyBindingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIamPolicyBindingArrayOutput)
}

type GetIamPolicyBindingOutput struct{ *pulumi.OutputState }

func (GetIamPolicyBindingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIamPolicyBinding)(nil)).Elem()
}

func (o GetIamPolicyBindingOutput) ToGetIamPolicyBindingOutput() GetIamPolicyBindingOutput {
	return o
}

func (o GetIamPolicyBindingOutput) ToGetIamPolicyBindingOutputWithContext(ctx context.Context) GetIamPolicyBindingOutput {
	return o
}

// An [IAM Condition](https://cloud.google.com/iam/docs/conditions-overview) for a given binding. Structure is documented below.
func (o GetIamPolicyBindingOutput) Condition() GetIamPolicyBindingConditionPtrOutput {
	return o.ApplyT(func(v GetIamPolicyBinding) *GetIamPolicyBindingCondition { return v.Condition }).(GetIamPolicyBindingConditionPtrOutput)
}

// An array of identities that will be granted the privilege in the `role`. For more details on format and restrictions see https://cloud.google.com/billing/reference/rest/v1/Policy#Binding
// Each entry can have one of the following values:
// * **allUsers**: A special identifier that represents anyone who is on the internet; with or without a Google account. Some resources **don't** support this identity.
// * **allAuthenticatedUsers**: A special identifier that represents anyone who is authenticated with a Google account or a service account. Some resources **don't** support this identity.
// * **user:{emailid}**: An email address that represents a specific Google account. For example, alice@gmail.com.
// * **serviceAccount:{emailid}**: An email address that represents a service account. For example, my-other-app@appspot.gserviceaccount.com.
// * **group:{emailid}**: An email address that represents a Google group. For example, admins@example.com.
// * **domain:{domain}**: A G Suite domain (primary, instead of alias) name that represents all the users of that domain. For example, google.com or example.com.
func (o GetIamPolicyBindingOutput) Members() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetIamPolicyBinding) []string { return v.Members }).(pulumi.StringArrayOutput)
}

// The role/permission that will be granted to the members.
// See the [IAM Roles](https://cloud.google.com/compute/docs/access/iam) documentation for a complete list of roles.
// Note that custom roles must be of the format `[projects|organizations]/{parent-name}/roles/{role-name}`.
func (o GetIamPolicyBindingOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v GetIamPolicyBinding) string { return v.Role }).(pulumi.StringOutput)
}

type GetIamPolicyBindingArrayOutput struct{ *pulumi.OutputState }

func (GetIamPolicyBindingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetIamPolicyBinding)(nil)).Elem()
}

func (o GetIamPolicyBindingArrayOutput) ToGetIamPolicyBindingArrayOutput() GetIamPolicyBindingArrayOutput {
	return o
}

func (o GetIamPolicyBindingArrayOutput) ToGetIamPolicyBindingArrayOutputWithContext(ctx context.Context) GetIamPolicyBindingArrayOutput {
	return o
}

func (o GetIamPolicyBindingArrayOutput) Index(i pulumi.IntInput) GetIamPolicyBindingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetIamPolicyBinding {
		return vs[0].([]GetIamPolicyBinding)[vs[1].(int)]
	}).(GetIamPolicyBindingOutput)
}

type GetIamPolicyBindingCondition struct {
	// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
	Description *string `pulumi:"description"`
	// Textual representation of an expression in Common Expression Language syntax.
	Expression string `pulumi:"expression"`
	// A title for the expression, i.e. a short string describing its purpose.
	Title string `pulumi:"title"`
}

// GetIamPolicyBindingConditionInput is an input type that accepts GetIamPolicyBindingConditionArgs and GetIamPolicyBindingConditionOutput values.
// You can construct a concrete instance of `GetIamPolicyBindingConditionInput` via:
//
//	GetIamPolicyBindingConditionArgs{...}
type GetIamPolicyBindingConditionInput interface {
	pulumi.Input

	ToGetIamPolicyBindingConditionOutput() GetIamPolicyBindingConditionOutput
	ToGetIamPolicyBindingConditionOutputWithContext(context.Context) GetIamPolicyBindingConditionOutput
}

type GetIamPolicyBindingConditionArgs struct {
	// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Textual representation of an expression in Common Expression Language syntax.
	Expression pulumi.StringInput `pulumi:"expression"`
	// A title for the expression, i.e. a short string describing its purpose.
	Title pulumi.StringInput `pulumi:"title"`
}

func (GetIamPolicyBindingConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIamPolicyBindingCondition)(nil)).Elem()
}

func (i GetIamPolicyBindingConditionArgs) ToGetIamPolicyBindingConditionOutput() GetIamPolicyBindingConditionOutput {
	return i.ToGetIamPolicyBindingConditionOutputWithContext(context.Background())
}

func (i GetIamPolicyBindingConditionArgs) ToGetIamPolicyBindingConditionOutputWithContext(ctx context.Context) GetIamPolicyBindingConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIamPolicyBindingConditionOutput)
}

func (i GetIamPolicyBindingConditionArgs) ToGetIamPolicyBindingConditionPtrOutput() GetIamPolicyBindingConditionPtrOutput {
	return i.ToGetIamPolicyBindingConditionPtrOutputWithContext(context.Background())
}

func (i GetIamPolicyBindingConditionArgs) ToGetIamPolicyBindingConditionPtrOutputWithContext(ctx context.Context) GetIamPolicyBindingConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIamPolicyBindingConditionOutput).ToGetIamPolicyBindingConditionPtrOutputWithContext(ctx)
}

// GetIamPolicyBindingConditionPtrInput is an input type that accepts GetIamPolicyBindingConditionArgs, GetIamPolicyBindingConditionPtr and GetIamPolicyBindingConditionPtrOutput values.
// You can construct a concrete instance of `GetIamPolicyBindingConditionPtrInput` via:
//
//	        GetIamPolicyBindingConditionArgs{...}
//
//	or:
//
//	        nil
type GetIamPolicyBindingConditionPtrInput interface {
	pulumi.Input

	ToGetIamPolicyBindingConditionPtrOutput() GetIamPolicyBindingConditionPtrOutput
	ToGetIamPolicyBindingConditionPtrOutputWithContext(context.Context) GetIamPolicyBindingConditionPtrOutput
}

type getIamPolicyBindingConditionPtrType GetIamPolicyBindingConditionArgs

func GetIamPolicyBindingConditionPtr(v *GetIamPolicyBindingConditionArgs) GetIamPolicyBindingConditionPtrInput {
	return (*getIamPolicyBindingConditionPtrType)(v)
}

func (*getIamPolicyBindingConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetIamPolicyBindingCondition)(nil)).Elem()
}

func (i *getIamPolicyBindingConditionPtrType) ToGetIamPolicyBindingConditionPtrOutput() GetIamPolicyBindingConditionPtrOutput {
	return i.ToGetIamPolicyBindingConditionPtrOutputWithContext(context.Background())
}

func (i *getIamPolicyBindingConditionPtrType) ToGetIamPolicyBindingConditionPtrOutputWithContext(ctx context.Context) GetIamPolicyBindingConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIamPolicyBindingConditionPtrOutput)
}

type GetIamPolicyBindingConditionOutput struct{ *pulumi.OutputState }

func (GetIamPolicyBindingConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIamPolicyBindingCondition)(nil)).Elem()
}

func (o GetIamPolicyBindingConditionOutput) ToGetIamPolicyBindingConditionOutput() GetIamPolicyBindingConditionOutput {
	return o
}

func (o GetIamPolicyBindingConditionOutput) ToGetIamPolicyBindingConditionOutputWithContext(ctx context.Context) GetIamPolicyBindingConditionOutput {
	return o
}

func (o GetIamPolicyBindingConditionOutput) ToGetIamPolicyBindingConditionPtrOutput() GetIamPolicyBindingConditionPtrOutput {
	return o.ToGetIamPolicyBindingConditionPtrOutputWithContext(context.Background())
}

func (o GetIamPolicyBindingConditionOutput) ToGetIamPolicyBindingConditionPtrOutputWithContext(ctx context.Context) GetIamPolicyBindingConditionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetIamPolicyBindingCondition) *GetIamPolicyBindingCondition {
		return &v
	}).(GetIamPolicyBindingConditionPtrOutput)
}

// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
func (o GetIamPolicyBindingConditionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetIamPolicyBindingCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Textual representation of an expression in Common Expression Language syntax.
func (o GetIamPolicyBindingConditionOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v GetIamPolicyBindingCondition) string { return v.Expression }).(pulumi.StringOutput)
}

// A title for the expression, i.e. a short string describing its purpose.
func (o GetIamPolicyBindingConditionOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v GetIamPolicyBindingCondition) string { return v.Title }).(pulumi.StringOutput)
}

type GetIamPolicyBindingConditionPtrOutput struct{ *pulumi.OutputState }

func (GetIamPolicyBindingConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetIamPolicyBindingCondition)(nil)).Elem()
}

func (o GetIamPolicyBindingConditionPtrOutput) ToGetIamPolicyBindingConditionPtrOutput() GetIamPolicyBindingConditionPtrOutput {
	return o
}

func (o GetIamPolicyBindingConditionPtrOutput) ToGetIamPolicyBindingConditionPtrOutputWithContext(ctx context.Context) GetIamPolicyBindingConditionPtrOutput {
	return o
}

func (o GetIamPolicyBindingConditionPtrOutput) Elem() GetIamPolicyBindingConditionOutput {
	return o.ApplyT(func(v *GetIamPolicyBindingCondition) GetIamPolicyBindingCondition {
		if v != nil {
			return *v
		}
		var ret GetIamPolicyBindingCondition
		return ret
	}).(GetIamPolicyBindingConditionOutput)
}

// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
func (o GetIamPolicyBindingConditionPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetIamPolicyBindingCondition) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Textual representation of an expression in Common Expression Language syntax.
func (o GetIamPolicyBindingConditionPtrOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetIamPolicyBindingCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Expression
	}).(pulumi.StringPtrOutput)
}

// A title for the expression, i.e. a short string describing its purpose.
func (o GetIamPolicyBindingConditionPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetIamPolicyBindingCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AccessApprovalSettingsEnrolledServiceInput)(nil)).Elem(), AccessApprovalSettingsEnrolledServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessApprovalSettingsEnrolledServiceArrayInput)(nil)).Elem(), AccessApprovalSettingsEnrolledServiceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IamAuditConfigAuditLogConfigInput)(nil)).Elem(), IamAuditConfigAuditLogConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IamAuditConfigAuditLogConfigArrayInput)(nil)).Elem(), IamAuditConfigAuditLogConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IamBindingConditionInput)(nil)).Elem(), IamBindingConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IamBindingConditionPtrInput)(nil)).Elem(), IamBindingConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IamMemberConditionInput)(nil)).Elem(), IamMemberConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IamMemberConditionPtrInput)(nil)).Elem(), IamMemberConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyBooleanPolicyInput)(nil)).Elem(), PolicyBooleanPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyBooleanPolicyPtrInput)(nil)).Elem(), PolicyBooleanPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyListPolicyInput)(nil)).Elem(), PolicyListPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyListPolicyPtrInput)(nil)).Elem(), PolicyListPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyListPolicyAllowInput)(nil)).Elem(), PolicyListPolicyAllowArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyListPolicyAllowPtrInput)(nil)).Elem(), PolicyListPolicyAllowArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyListPolicyDenyInput)(nil)).Elem(), PolicyListPolicyDenyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyListPolicyDenyPtrInput)(nil)).Elem(), PolicyListPolicyDenyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyRestorePolicyInput)(nil)).Elem(), PolicyRestorePolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyRestorePolicyPtrInput)(nil)).Elem(), PolicyRestorePolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFoldersFolderInput)(nil)).Elem(), GetFoldersFolderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFoldersFolderArrayInput)(nil)).Elem(), GetFoldersFolderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetIamPolicyAuditConfigInput)(nil)).Elem(), GetIamPolicyAuditConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetIamPolicyAuditConfigArrayInput)(nil)).Elem(), GetIamPolicyAuditConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetIamPolicyAuditConfigAuditLogConfigInput)(nil)).Elem(), GetIamPolicyAuditConfigAuditLogConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetIamPolicyAuditConfigAuditLogConfigArrayInput)(nil)).Elem(), GetIamPolicyAuditConfigAuditLogConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetIamPolicyBindingInput)(nil)).Elem(), GetIamPolicyBindingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetIamPolicyBindingArrayInput)(nil)).Elem(), GetIamPolicyBindingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetIamPolicyBindingConditionInput)(nil)).Elem(), GetIamPolicyBindingConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetIamPolicyBindingConditionPtrInput)(nil)).Elem(), GetIamPolicyBindingConditionArgs{})
	pulumi.RegisterOutputType(AccessApprovalSettingsEnrolledServiceOutput{})
	pulumi.RegisterOutputType(AccessApprovalSettingsEnrolledServiceArrayOutput{})
	pulumi.RegisterOutputType(IamAuditConfigAuditLogConfigOutput{})
	pulumi.RegisterOutputType(IamAuditConfigAuditLogConfigArrayOutput{})
	pulumi.RegisterOutputType(IamBindingConditionOutput{})
	pulumi.RegisterOutputType(IamBindingConditionPtrOutput{})
	pulumi.RegisterOutputType(IamMemberConditionOutput{})
	pulumi.RegisterOutputType(IamMemberConditionPtrOutput{})
	pulumi.RegisterOutputType(PolicyBooleanPolicyOutput{})
	pulumi.RegisterOutputType(PolicyBooleanPolicyPtrOutput{})
	pulumi.RegisterOutputType(PolicyListPolicyOutput{})
	pulumi.RegisterOutputType(PolicyListPolicyPtrOutput{})
	pulumi.RegisterOutputType(PolicyListPolicyAllowOutput{})
	pulumi.RegisterOutputType(PolicyListPolicyAllowPtrOutput{})
	pulumi.RegisterOutputType(PolicyListPolicyDenyOutput{})
	pulumi.RegisterOutputType(PolicyListPolicyDenyPtrOutput{})
	pulumi.RegisterOutputType(PolicyRestorePolicyOutput{})
	pulumi.RegisterOutputType(PolicyRestorePolicyPtrOutput{})
	pulumi.RegisterOutputType(GetFoldersFolderOutput{})
	pulumi.RegisterOutputType(GetFoldersFolderArrayOutput{})
	pulumi.RegisterOutputType(GetIamPolicyAuditConfigOutput{})
	pulumi.RegisterOutputType(GetIamPolicyAuditConfigArrayOutput{})
	pulumi.RegisterOutputType(GetIamPolicyAuditConfigAuditLogConfigOutput{})
	pulumi.RegisterOutputType(GetIamPolicyAuditConfigAuditLogConfigArrayOutput{})
	pulumi.RegisterOutputType(GetIamPolicyBindingOutput{})
	pulumi.RegisterOutputType(GetIamPolicyBindingArrayOutput{})
	pulumi.RegisterOutputType(GetIamPolicyBindingConditionOutput{})
	pulumi.RegisterOutputType(GetIamPolicyBindingConditionPtrOutput{})
}
