// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package iap

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Retrieves the current IAM policy data for tunnelinstance
//
// ## example
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/iap"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := iap.LookupTunnelInstanceIamPolicy(ctx, &iap.LookupTunnelInstanceIamPolicyArgs{
//				Project:  pulumi.StringRef(google_compute_instance.Tunnelvm.Project),
//				Zone:     pulumi.StringRef(google_compute_instance.Tunnelvm.Zone),
//				Instance: google_compute_instance.Tunnelvm.Name,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupTunnelInstanceIamPolicy(ctx *pulumi.Context, args *LookupTunnelInstanceIamPolicyArgs, opts ...pulumi.InvokeOption) (*LookupTunnelInstanceIamPolicyResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupTunnelInstanceIamPolicyResult
	err := ctx.Invoke("gcp:iap/getTunnelInstanceIamPolicy:getTunnelInstanceIamPolicy", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getTunnelInstanceIamPolicy.
type LookupTunnelInstanceIamPolicyArgs struct {
	// Used to find the parent resource to bind the IAM policy to
	Instance string `pulumi:"instance"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project *string `pulumi:"project"`
	Zone    *string `pulumi:"zone"`
}

// A collection of values returned by getTunnelInstanceIamPolicy.
type LookupTunnelInstanceIamPolicyResult struct {
	// (Computed) The etag of the IAM policy.
	Etag string `pulumi:"etag"`
	// The provider-assigned unique ID for this managed resource.
	Id       string `pulumi:"id"`
	Instance string `pulumi:"instance"`
	// (Required only by `iap.TunnelInstanceIamPolicy`) The policy data generated by
	// a `organizations.getIamPolicy` data source.
	PolicyData string `pulumi:"policyData"`
	Project    string `pulumi:"project"`
	Zone       string `pulumi:"zone"`
}

func LookupTunnelInstanceIamPolicyOutput(ctx *pulumi.Context, args LookupTunnelInstanceIamPolicyOutputArgs, opts ...pulumi.InvokeOption) LookupTunnelInstanceIamPolicyResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupTunnelInstanceIamPolicyResult, error) {
			args := v.(LookupTunnelInstanceIamPolicyArgs)
			r, err := LookupTunnelInstanceIamPolicy(ctx, &args, opts...)
			var s LookupTunnelInstanceIamPolicyResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupTunnelInstanceIamPolicyResultOutput)
}

// A collection of arguments for invoking getTunnelInstanceIamPolicy.
type LookupTunnelInstanceIamPolicyOutputArgs struct {
	// Used to find the parent resource to bind the IAM policy to
	Instance pulumi.StringInput `pulumi:"instance"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project pulumi.StringPtrInput `pulumi:"project"`
	Zone    pulumi.StringPtrInput `pulumi:"zone"`
}

func (LookupTunnelInstanceIamPolicyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupTunnelInstanceIamPolicyArgs)(nil)).Elem()
}

// A collection of values returned by getTunnelInstanceIamPolicy.
type LookupTunnelInstanceIamPolicyResultOutput struct{ *pulumi.OutputState }

func (LookupTunnelInstanceIamPolicyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupTunnelInstanceIamPolicyResult)(nil)).Elem()
}

func (o LookupTunnelInstanceIamPolicyResultOutput) ToLookupTunnelInstanceIamPolicyResultOutput() LookupTunnelInstanceIamPolicyResultOutput {
	return o
}

func (o LookupTunnelInstanceIamPolicyResultOutput) ToLookupTunnelInstanceIamPolicyResultOutputWithContext(ctx context.Context) LookupTunnelInstanceIamPolicyResultOutput {
	return o
}

// (Computed) The etag of the IAM policy.
func (o LookupTunnelInstanceIamPolicyResultOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTunnelInstanceIamPolicyResult) string { return v.Etag }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupTunnelInstanceIamPolicyResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTunnelInstanceIamPolicyResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupTunnelInstanceIamPolicyResultOutput) Instance() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTunnelInstanceIamPolicyResult) string { return v.Instance }).(pulumi.StringOutput)
}

// (Required only by `iap.TunnelInstanceIamPolicy`) The policy data generated by
// a `organizations.getIamPolicy` data source.
func (o LookupTunnelInstanceIamPolicyResultOutput) PolicyData() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTunnelInstanceIamPolicyResult) string { return v.PolicyData }).(pulumi.StringOutput)
}

func (o LookupTunnelInstanceIamPolicyResultOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTunnelInstanceIamPolicyResult) string { return v.Project }).(pulumi.StringOutput)
}

func (o LookupTunnelInstanceIamPolicyResultOutput) Zone() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTunnelInstanceIamPolicyResult) string { return v.Zone }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupTunnelInstanceIamPolicyResultOutput{})
}
