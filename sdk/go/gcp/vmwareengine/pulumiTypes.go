// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vmwareengine

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type NetworkVpcNetwork struct {
	// (Output)
	// The relative resource name of the service VPC network this VMware Engine network is attached to.
	// For example: projects/123123/global/networks/my-network
	Network *string `pulumi:"network"`
	// VMware Engine network type.
	// Possible values are: `LEGACY`.
	Type *string `pulumi:"type"`
}

// NetworkVpcNetworkInput is an input type that accepts NetworkVpcNetworkArgs and NetworkVpcNetworkOutput values.
// You can construct a concrete instance of `NetworkVpcNetworkInput` via:
//
//	NetworkVpcNetworkArgs{...}
type NetworkVpcNetworkInput interface {
	pulumi.Input

	ToNetworkVpcNetworkOutput() NetworkVpcNetworkOutput
	ToNetworkVpcNetworkOutputWithContext(context.Context) NetworkVpcNetworkOutput
}

type NetworkVpcNetworkArgs struct {
	// (Output)
	// The relative resource name of the service VPC network this VMware Engine network is attached to.
	// For example: projects/123123/global/networks/my-network
	Network pulumi.StringPtrInput `pulumi:"network"`
	// VMware Engine network type.
	// Possible values are: `LEGACY`.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (NetworkVpcNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkVpcNetwork)(nil)).Elem()
}

func (i NetworkVpcNetworkArgs) ToNetworkVpcNetworkOutput() NetworkVpcNetworkOutput {
	return i.ToNetworkVpcNetworkOutputWithContext(context.Background())
}

func (i NetworkVpcNetworkArgs) ToNetworkVpcNetworkOutputWithContext(ctx context.Context) NetworkVpcNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkVpcNetworkOutput)
}

// NetworkVpcNetworkArrayInput is an input type that accepts NetworkVpcNetworkArray and NetworkVpcNetworkArrayOutput values.
// You can construct a concrete instance of `NetworkVpcNetworkArrayInput` via:
//
//	NetworkVpcNetworkArray{ NetworkVpcNetworkArgs{...} }
type NetworkVpcNetworkArrayInput interface {
	pulumi.Input

	ToNetworkVpcNetworkArrayOutput() NetworkVpcNetworkArrayOutput
	ToNetworkVpcNetworkArrayOutputWithContext(context.Context) NetworkVpcNetworkArrayOutput
}

type NetworkVpcNetworkArray []NetworkVpcNetworkInput

func (NetworkVpcNetworkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkVpcNetwork)(nil)).Elem()
}

func (i NetworkVpcNetworkArray) ToNetworkVpcNetworkArrayOutput() NetworkVpcNetworkArrayOutput {
	return i.ToNetworkVpcNetworkArrayOutputWithContext(context.Background())
}

func (i NetworkVpcNetworkArray) ToNetworkVpcNetworkArrayOutputWithContext(ctx context.Context) NetworkVpcNetworkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkVpcNetworkArrayOutput)
}

type NetworkVpcNetworkOutput struct{ *pulumi.OutputState }

func (NetworkVpcNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkVpcNetwork)(nil)).Elem()
}

func (o NetworkVpcNetworkOutput) ToNetworkVpcNetworkOutput() NetworkVpcNetworkOutput {
	return o
}

func (o NetworkVpcNetworkOutput) ToNetworkVpcNetworkOutputWithContext(ctx context.Context) NetworkVpcNetworkOutput {
	return o
}

// (Output)
// The relative resource name of the service VPC network this VMware Engine network is attached to.
// For example: projects/123123/global/networks/my-network
func (o NetworkVpcNetworkOutput) Network() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkVpcNetwork) *string { return v.Network }).(pulumi.StringPtrOutput)
}

// VMware Engine network type.
// Possible values are: `LEGACY`.
func (o NetworkVpcNetworkOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkVpcNetwork) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type NetworkVpcNetworkArrayOutput struct{ *pulumi.OutputState }

func (NetworkVpcNetworkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkVpcNetwork)(nil)).Elem()
}

func (o NetworkVpcNetworkArrayOutput) ToNetworkVpcNetworkArrayOutput() NetworkVpcNetworkArrayOutput {
	return o
}

func (o NetworkVpcNetworkArrayOutput) ToNetworkVpcNetworkArrayOutputWithContext(ctx context.Context) NetworkVpcNetworkArrayOutput {
	return o
}

func (o NetworkVpcNetworkArrayOutput) Index(i pulumi.IntInput) NetworkVpcNetworkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkVpcNetwork {
		return vs[0].([]NetworkVpcNetwork)[vs[1].(int)]
	}).(NetworkVpcNetworkOutput)
}

type GetNetworkVpcNetwork struct {
	Network string `pulumi:"network"`
	Type    string `pulumi:"type"`
}

// GetNetworkVpcNetworkInput is an input type that accepts GetNetworkVpcNetworkArgs and GetNetworkVpcNetworkOutput values.
// You can construct a concrete instance of `GetNetworkVpcNetworkInput` via:
//
//	GetNetworkVpcNetworkArgs{...}
type GetNetworkVpcNetworkInput interface {
	pulumi.Input

	ToGetNetworkVpcNetworkOutput() GetNetworkVpcNetworkOutput
	ToGetNetworkVpcNetworkOutputWithContext(context.Context) GetNetworkVpcNetworkOutput
}

type GetNetworkVpcNetworkArgs struct {
	Network pulumi.StringInput `pulumi:"network"`
	Type    pulumi.StringInput `pulumi:"type"`
}

func (GetNetworkVpcNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkVpcNetwork)(nil)).Elem()
}

func (i GetNetworkVpcNetworkArgs) ToGetNetworkVpcNetworkOutput() GetNetworkVpcNetworkOutput {
	return i.ToGetNetworkVpcNetworkOutputWithContext(context.Background())
}

func (i GetNetworkVpcNetworkArgs) ToGetNetworkVpcNetworkOutputWithContext(ctx context.Context) GetNetworkVpcNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkVpcNetworkOutput)
}

// GetNetworkVpcNetworkArrayInput is an input type that accepts GetNetworkVpcNetworkArray and GetNetworkVpcNetworkArrayOutput values.
// You can construct a concrete instance of `GetNetworkVpcNetworkArrayInput` via:
//
//	GetNetworkVpcNetworkArray{ GetNetworkVpcNetworkArgs{...} }
type GetNetworkVpcNetworkArrayInput interface {
	pulumi.Input

	ToGetNetworkVpcNetworkArrayOutput() GetNetworkVpcNetworkArrayOutput
	ToGetNetworkVpcNetworkArrayOutputWithContext(context.Context) GetNetworkVpcNetworkArrayOutput
}

type GetNetworkVpcNetworkArray []GetNetworkVpcNetworkInput

func (GetNetworkVpcNetworkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkVpcNetwork)(nil)).Elem()
}

func (i GetNetworkVpcNetworkArray) ToGetNetworkVpcNetworkArrayOutput() GetNetworkVpcNetworkArrayOutput {
	return i.ToGetNetworkVpcNetworkArrayOutputWithContext(context.Background())
}

func (i GetNetworkVpcNetworkArray) ToGetNetworkVpcNetworkArrayOutputWithContext(ctx context.Context) GetNetworkVpcNetworkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkVpcNetworkArrayOutput)
}

type GetNetworkVpcNetworkOutput struct{ *pulumi.OutputState }

func (GetNetworkVpcNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkVpcNetwork)(nil)).Elem()
}

func (o GetNetworkVpcNetworkOutput) ToGetNetworkVpcNetworkOutput() GetNetworkVpcNetworkOutput {
	return o
}

func (o GetNetworkVpcNetworkOutput) ToGetNetworkVpcNetworkOutputWithContext(ctx context.Context) GetNetworkVpcNetworkOutput {
	return o
}

func (o GetNetworkVpcNetworkOutput) Network() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkVpcNetwork) string { return v.Network }).(pulumi.StringOutput)
}

func (o GetNetworkVpcNetworkOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkVpcNetwork) string { return v.Type }).(pulumi.StringOutput)
}

type GetNetworkVpcNetworkArrayOutput struct{ *pulumi.OutputState }

func (GetNetworkVpcNetworkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkVpcNetwork)(nil)).Elem()
}

func (o GetNetworkVpcNetworkArrayOutput) ToGetNetworkVpcNetworkArrayOutput() GetNetworkVpcNetworkArrayOutput {
	return o
}

func (o GetNetworkVpcNetworkArrayOutput) ToGetNetworkVpcNetworkArrayOutputWithContext(ctx context.Context) GetNetworkVpcNetworkArrayOutput {
	return o
}

func (o GetNetworkVpcNetworkArrayOutput) Index(i pulumi.IntInput) GetNetworkVpcNetworkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNetworkVpcNetwork {
		return vs[0].([]GetNetworkVpcNetwork)[vs[1].(int)]
	}).(GetNetworkVpcNetworkOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkVpcNetworkInput)(nil)).Elem(), NetworkVpcNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkVpcNetworkArrayInput)(nil)).Elem(), NetworkVpcNetworkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkVpcNetworkInput)(nil)).Elem(), GetNetworkVpcNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkVpcNetworkArrayInput)(nil)).Elem(), GetNetworkVpcNetworkArray{})
	pulumi.RegisterOutputType(NetworkVpcNetworkOutput{})
	pulumi.RegisterOutputType(NetworkVpcNetworkArrayOutput{})
	pulumi.RegisterOutputType(GetNetworkVpcNetworkOutput{})
	pulumi.RegisterOutputType(GetNetworkVpcNetworkArrayOutput{})
}
